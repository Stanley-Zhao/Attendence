//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 5.0.61118.0
// 
namespace CARS.CARSService {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseEntity", Namespace="http://schemas.datacontract.org/2004/07/CARS.Backend.Entity")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CARS.CARSService.EmployeeRoleRL))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CARS.CARSService.TimeDurationInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CARS.CARSService.LeaveInfo))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CARS.CARSService.LeaveType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CARS.CARSService.ReportPeriod))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CARS.CARSService.Employee))]
    public partial class BaseEntity : object, System.ComponentModel.INotifyPropertyChanged {
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EmployeeRoleRL", Namespace="http://schemas.datacontract.org/2004/07/CARS.Backend.Entity")]
    public partial class EmployeeRoleRL : CARS.CARSService.BaseEntity {
        
        private System.DateTime CreatedTimeField;
        
        private System.Guid FKEmployeeIDField;
        
        private System.Guid FKRoleIDField;
        
        private bool IsDeletedField;
        
        private System.DateTime KnowledgeDateField;
        
        private System.Guid PKEmployeeRoleRLIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedTime {
            get {
                return this.CreatedTimeField;
            }
            set {
                if ((this.CreatedTimeField.Equals(value) != true)) {
                    this.CreatedTimeField = value;
                    this.RaisePropertyChanged("CreatedTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid FKEmployeeID {
            get {
                return this.FKEmployeeIDField;
            }
            set {
                if ((this.FKEmployeeIDField.Equals(value) != true)) {
                    this.FKEmployeeIDField = value;
                    this.RaisePropertyChanged("FKEmployeeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid FKRoleID {
            get {
                return this.FKRoleIDField;
            }
            set {
                if ((this.FKRoleIDField.Equals(value) != true)) {
                    this.FKRoleIDField = value;
                    this.RaisePropertyChanged("FKRoleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDeleted {
            get {
                return this.IsDeletedField;
            }
            set {
                if ((this.IsDeletedField.Equals(value) != true)) {
                    this.IsDeletedField = value;
                    this.RaisePropertyChanged("IsDeleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime KnowledgeDate {
            get {
                return this.KnowledgeDateField;
            }
            set {
                if ((this.KnowledgeDateField.Equals(value) != true)) {
                    this.KnowledgeDateField = value;
                    this.RaisePropertyChanged("KnowledgeDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid PKEmployeeRoleRLID {
            get {
                return this.PKEmployeeRoleRLIDField;
            }
            set {
                if ((this.PKEmployeeRoleRLIDField.Equals(value) != true)) {
                    this.PKEmployeeRoleRLIDField = value;
                    this.RaisePropertyChanged("PKEmployeeRoleRLID");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TimeDurationInfo", Namespace="http://schemas.datacontract.org/2004/07/CARS.Backend.Entity")]
    public partial class TimeDurationInfo : CARS.CARSService.BaseEntity {
        
        private System.DateTime CreatedTimeField;
        
        private System.DateTime EndTimeField;
        
        private System.Guid FKLeaveInfoIDField;
        
        private bool IsDeletedField;
        
        private System.DateTime KnowledgeDateField;
        
        private System.Guid PKTDInfoIDField;
        
        private System.DateTime StartTimeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedTime {
            get {
                return this.CreatedTimeField;
            }
            set {
                if ((this.CreatedTimeField.Equals(value) != true)) {
                    this.CreatedTimeField = value;
                    this.RaisePropertyChanged("CreatedTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndTime {
            get {
                return this.EndTimeField;
            }
            set {
                if ((this.EndTimeField.Equals(value) != true)) {
                    this.EndTimeField = value;
                    this.RaisePropertyChanged("EndTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid FKLeaveInfoID {
            get {
                return this.FKLeaveInfoIDField;
            }
            set {
                if ((this.FKLeaveInfoIDField.Equals(value) != true)) {
                    this.FKLeaveInfoIDField = value;
                    this.RaisePropertyChanged("FKLeaveInfoID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDeleted {
            get {
                return this.IsDeletedField;
            }
            set {
                if ((this.IsDeletedField.Equals(value) != true)) {
                    this.IsDeletedField = value;
                    this.RaisePropertyChanged("IsDeleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime KnowledgeDate {
            get {
                return this.KnowledgeDateField;
            }
            set {
                if ((this.KnowledgeDateField.Equals(value) != true)) {
                    this.KnowledgeDateField = value;
                    this.RaisePropertyChanged("KnowledgeDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid PKTDInfoID {
            get {
                return this.PKTDInfoIDField;
            }
            set {
                if ((this.PKTDInfoIDField.Equals(value) != true)) {
                    this.PKTDInfoIDField = value;
                    this.RaisePropertyChanged("PKTDInfoID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartTime {
            get {
                return this.StartTimeField;
            }
            set {
                if ((this.StartTimeField.Equals(value) != true)) {
                    this.StartTimeField = value;
                    this.RaisePropertyChanged("StartTime");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LeaveInfo", Namespace="http://schemas.datacontract.org/2004/07/CARS.Backend.Entity")]
    public partial class LeaveInfo : CARS.CARSService.BaseEntity {
        
        private System.DateTime CreatedTimeField;
        
        private string DescriptionField;
        
        private System.Guid FKLeaveTypeIDField;
        
        private System.Guid FKReportManagerIDField;
        
        private System.Guid FKSubmitEmployeeIDField;
        
        private System.DateTime FirstStartTimeField;
        
        private int HoursField;
        
        private System.DateTime KnowledgeDateField;
        
        private System.DateTime LastEndTimeField;
        
        private CARS.CARSService.Employee ManagerField;
        
        private System.Guid PKLeaveInfoIDField;
        
        private CARS.CARSService.LeaveStatus PreStatusField;
        
        private string ReasonField;
        
        private CARS.CARSService.LeaveStatus StatusField;
        
        private CARS.CARSService.Employee SubmitterField;
        
        private System.Collections.ObjectModel.ObservableCollection<CARS.CARSService.TimeDurationInfo> TimeDurationInfoListField;
        
        private CARS.CARSService.LeaveType TypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedTime {
            get {
                return this.CreatedTimeField;
            }
            set {
                if ((this.CreatedTimeField.Equals(value) != true)) {
                    this.CreatedTimeField = value;
                    this.RaisePropertyChanged("CreatedTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid FKLeaveTypeID {
            get {
                return this.FKLeaveTypeIDField;
            }
            set {
                if ((this.FKLeaveTypeIDField.Equals(value) != true)) {
                    this.FKLeaveTypeIDField = value;
                    this.RaisePropertyChanged("FKLeaveTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid FKReportManagerID {
            get {
                return this.FKReportManagerIDField;
            }
            set {
                if ((this.FKReportManagerIDField.Equals(value) != true)) {
                    this.FKReportManagerIDField = value;
                    this.RaisePropertyChanged("FKReportManagerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid FKSubmitEmployeeID {
            get {
                return this.FKSubmitEmployeeIDField;
            }
            set {
                if ((this.FKSubmitEmployeeIDField.Equals(value) != true)) {
                    this.FKSubmitEmployeeIDField = value;
                    this.RaisePropertyChanged("FKSubmitEmployeeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime FirstStartTime {
            get {
                return this.FirstStartTimeField;
            }
            set {
                if ((this.FirstStartTimeField.Equals(value) != true)) {
                    this.FirstStartTimeField = value;
                    this.RaisePropertyChanged("FirstStartTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Hours {
            get {
                return this.HoursField;
            }
            set {
                if ((this.HoursField.Equals(value) != true)) {
                    this.HoursField = value;
                    this.RaisePropertyChanged("Hours");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime KnowledgeDate {
            get {
                return this.KnowledgeDateField;
            }
            set {
                if ((this.KnowledgeDateField.Equals(value) != true)) {
                    this.KnowledgeDateField = value;
                    this.RaisePropertyChanged("KnowledgeDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastEndTime {
            get {
                return this.LastEndTimeField;
            }
            set {
                if ((this.LastEndTimeField.Equals(value) != true)) {
                    this.LastEndTimeField = value;
                    this.RaisePropertyChanged("LastEndTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CARS.CARSService.Employee Manager {
            get {
                return this.ManagerField;
            }
            set {
                if ((object.ReferenceEquals(this.ManagerField, value) != true)) {
                    this.ManagerField = value;
                    this.RaisePropertyChanged("Manager");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid PKLeaveInfoID {
            get {
                return this.PKLeaveInfoIDField;
            }
            set {
                if ((this.PKLeaveInfoIDField.Equals(value) != true)) {
                    this.PKLeaveInfoIDField = value;
                    this.RaisePropertyChanged("PKLeaveInfoID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CARS.CARSService.LeaveStatus PreStatus {
            get {
                return this.PreStatusField;
            }
            set {
                if ((this.PreStatusField.Equals(value) != true)) {
                    this.PreStatusField = value;
                    this.RaisePropertyChanged("PreStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reason {
            get {
                return this.ReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.ReasonField, value) != true)) {
                    this.ReasonField = value;
                    this.RaisePropertyChanged("Reason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CARS.CARSService.LeaveStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CARS.CARSService.Employee Submitter {
            get {
                return this.SubmitterField;
            }
            set {
                if ((object.ReferenceEquals(this.SubmitterField, value) != true)) {
                    this.SubmitterField = value;
                    this.RaisePropertyChanged("Submitter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<CARS.CARSService.TimeDurationInfo> TimeDurationInfoList {
            get {
                return this.TimeDurationInfoListField;
            }
            set {
                if ((object.ReferenceEquals(this.TimeDurationInfoListField, value) != true)) {
                    this.TimeDurationInfoListField = value;
                    this.RaisePropertyChanged("TimeDurationInfoList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CARS.CARSService.LeaveType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LeaveType", Namespace="http://schemas.datacontract.org/2004/07/CARS.Backend.Entity")]
    public partial class LeaveType : CARS.CARSService.BaseEntity {
        
        private System.DateTime CreatedTimeField;
        
        private string DescriptionField;
        
        private System.DateTime EndTimeField;
        
        private System.DateTime KnowledgeDateField;
        
        private int LeastHoursOneTimeField;
        
        private int LongestHoursOneTimeField;
        
        private string NameField;
        
        private System.Guid PKLeaveTypeIDField;
        
        private System.DateTime StartTimeField;
        
        private int TotalHoursField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedTime {
            get {
                return this.CreatedTimeField;
            }
            set {
                if ((this.CreatedTimeField.Equals(value) != true)) {
                    this.CreatedTimeField = value;
                    this.RaisePropertyChanged("CreatedTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndTime {
            get {
                return this.EndTimeField;
            }
            set {
                if ((this.EndTimeField.Equals(value) != true)) {
                    this.EndTimeField = value;
                    this.RaisePropertyChanged("EndTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime KnowledgeDate {
            get {
                return this.KnowledgeDateField;
            }
            set {
                if ((this.KnowledgeDateField.Equals(value) != true)) {
                    this.KnowledgeDateField = value;
                    this.RaisePropertyChanged("KnowledgeDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LeastHoursOneTime {
            get {
                return this.LeastHoursOneTimeField;
            }
            set {
                if ((this.LeastHoursOneTimeField.Equals(value) != true)) {
                    this.LeastHoursOneTimeField = value;
                    this.RaisePropertyChanged("LeastHoursOneTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LongestHoursOneTime {
            get {
                return this.LongestHoursOneTimeField;
            }
            set {
                if ((this.LongestHoursOneTimeField.Equals(value) != true)) {
                    this.LongestHoursOneTimeField = value;
                    this.RaisePropertyChanged("LongestHoursOneTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid PKLeaveTypeID {
            get {
                return this.PKLeaveTypeIDField;
            }
            set {
                if ((this.PKLeaveTypeIDField.Equals(value) != true)) {
                    this.PKLeaveTypeIDField = value;
                    this.RaisePropertyChanged("PKLeaveTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartTime {
            get {
                return this.StartTimeField;
            }
            set {
                if ((this.StartTimeField.Equals(value) != true)) {
                    this.StartTimeField = value;
                    this.RaisePropertyChanged("StartTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalHours {
            get {
                return this.TotalHoursField;
            }
            set {
                if ((this.TotalHoursField.Equals(value) != true)) {
                    this.TotalHoursField = value;
                    this.RaisePropertyChanged("TotalHours");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReportPeriod", Namespace="http://schemas.datacontract.org/2004/07/CARS.Backend.Entity")]
    public partial class ReportPeriod : CARS.CARSService.BaseEntity {
        
        private System.DateTime CreatedTimeField;
        
        private System.Nullable<System.DateTime> EndTimeField;
        
        private System.DateTime KnowledgeDateField;
        
        private CARS.CARSService.MonthRank MonthField;
        
        private System.Nullable<System.DateTime> StartTimeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedTime {
            get {
                return this.CreatedTimeField;
            }
            set {
                if ((this.CreatedTimeField.Equals(value) != true)) {
                    this.CreatedTimeField = value;
                    this.RaisePropertyChanged("CreatedTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EndTime {
            get {
                return this.EndTimeField;
            }
            set {
                if ((this.EndTimeField.Equals(value) != true)) {
                    this.EndTimeField = value;
                    this.RaisePropertyChanged("EndTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime KnowledgeDate {
            get {
                return this.KnowledgeDateField;
            }
            set {
                if ((this.KnowledgeDateField.Equals(value) != true)) {
                    this.KnowledgeDateField = value;
                    this.RaisePropertyChanged("KnowledgeDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CARS.CARSService.MonthRank Month {
            get {
                return this.MonthField;
            }
            set {
                if ((this.MonthField.Equals(value) != true)) {
                    this.MonthField = value;
                    this.RaisePropertyChanged("Month");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> StartTime {
            get {
                return this.StartTimeField;
            }
            set {
                if ((this.StartTimeField.Equals(value) != true)) {
                    this.StartTimeField = value;
                    this.RaisePropertyChanged("StartTime");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Employee", Namespace="http://schemas.datacontract.org/2004/07/CARS.Backend.Entity")]
    public partial class Employee : CARS.CARSService.BaseEntity {
        
        private System.Collections.ObjectModel.ObservableCollection<CARS.CARSService.EmployeeRoleRL> ActiveEmployeeRoleListField;
        
        private string CommentField;
        
        private string CostCenterField;
        
        private System.DateTime CreatedTimeField;
        
        private string EmailField;
        
        private int EmployeeNumField;
        
        private System.Guid FKReportManagerIDField;
        
        private string FirstNameField;
        
        private CARS.CARSService.Sex GenderField;
        
        private System.DateTime HiredDateField;
        
        private bool IsActiveField;
        
        private bool IsAdminField;
        
        private bool IsManagerField;
        
        private System.DateTime KnowledgeDateField;
        
        private string LastNameField;
        
        private System.Collections.ObjectModel.ObservableCollection<CARS.CARSService.Employee> LeadersField;
        
        private string LegalNameField;
        
        private CARS.CARSService.Employee ManagerField;
        
        private string MiddleNameField;
        
        private string MobileField;
        
        private System.Guid PKEmployeeIDField;
        
        private string PasswordField;
        
        private string PhoneField;
        
        private float ServiceYearsField;
        
        private System.Collections.ObjectModel.ObservableCollection<CARS.CARSService.Employee> TeamMembersField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<CARS.CARSService.EmployeeRoleRL> ActiveEmployeeRoleList {
            get {
                return this.ActiveEmployeeRoleListField;
            }
            set {
                if ((object.ReferenceEquals(this.ActiveEmployeeRoleListField, value) != true)) {
                    this.ActiveEmployeeRoleListField = value;
                    this.RaisePropertyChanged("ActiveEmployeeRoleList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CostCenter {
            get {
                return this.CostCenterField;
            }
            set {
                if ((object.ReferenceEquals(this.CostCenterField, value) != true)) {
                    this.CostCenterField = value;
                    this.RaisePropertyChanged("CostCenter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedTime {
            get {
                return this.CreatedTimeField;
            }
            set {
                if ((this.CreatedTimeField.Equals(value) != true)) {
                    this.CreatedTimeField = value;
                    this.RaisePropertyChanged("CreatedTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EmployeeNum {
            get {
                return this.EmployeeNumField;
            }
            set {
                if ((this.EmployeeNumField.Equals(value) != true)) {
                    this.EmployeeNumField = value;
                    this.RaisePropertyChanged("EmployeeNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid FKReportManagerID {
            get {
                return this.FKReportManagerIDField;
            }
            set {
                if ((this.FKReportManagerIDField.Equals(value) != true)) {
                    this.FKReportManagerIDField = value;
                    this.RaisePropertyChanged("FKReportManagerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CARS.CARSService.Sex Gender {
            get {
                return this.GenderField;
            }
            set {
                if ((this.GenderField.Equals(value) != true)) {
                    this.GenderField = value;
                    this.RaisePropertyChanged("Gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime HiredDate {
            get {
                return this.HiredDateField;
            }
            set {
                if ((this.HiredDateField.Equals(value) != true)) {
                    this.HiredDateField = value;
                    this.RaisePropertyChanged("HiredDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAdmin {
            get {
                return this.IsAdminField;
            }
            set {
                if ((this.IsAdminField.Equals(value) != true)) {
                    this.IsAdminField = value;
                    this.RaisePropertyChanged("IsAdmin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsManager {
            get {
                return this.IsManagerField;
            }
            set {
                if ((this.IsManagerField.Equals(value) != true)) {
                    this.IsManagerField = value;
                    this.RaisePropertyChanged("IsManager");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime KnowledgeDate {
            get {
                return this.KnowledgeDateField;
            }
            set {
                if ((this.KnowledgeDateField.Equals(value) != true)) {
                    this.KnowledgeDateField = value;
                    this.RaisePropertyChanged("KnowledgeDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<CARS.CARSService.Employee> Leaders {
            get {
                return this.LeadersField;
            }
            set {
                if ((object.ReferenceEquals(this.LeadersField, value) != true)) {
                    this.LeadersField = value;
                    this.RaisePropertyChanged("Leaders");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LegalName {
            get {
                return this.LegalNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LegalNameField, value) != true)) {
                    this.LegalNameField = value;
                    this.RaisePropertyChanged("LegalName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CARS.CARSService.Employee Manager {
            get {
                return this.ManagerField;
            }
            set {
                if ((object.ReferenceEquals(this.ManagerField, value) != true)) {
                    this.ManagerField = value;
                    this.RaisePropertyChanged("Manager");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MiddleName {
            get {
                return this.MiddleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MiddleNameField, value) != true)) {
                    this.MiddleNameField = value;
                    this.RaisePropertyChanged("MiddleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Mobile {
            get {
                return this.MobileField;
            }
            set {
                if ((object.ReferenceEquals(this.MobileField, value) != true)) {
                    this.MobileField = value;
                    this.RaisePropertyChanged("Mobile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid PKEmployeeID {
            get {
                return this.PKEmployeeIDField;
            }
            set {
                if ((this.PKEmployeeIDField.Equals(value) != true)) {
                    this.PKEmployeeIDField = value;
                    this.RaisePropertyChanged("PKEmployeeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float ServiceYears {
            get {
                return this.ServiceYearsField;
            }
            set {
                if ((this.ServiceYearsField.Equals(value) != true)) {
                    this.ServiceYearsField = value;
                    this.RaisePropertyChanged("ServiceYears");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<CARS.CARSService.Employee> TeamMembers {
            get {
                return this.TeamMembersField;
            }
            set {
                if ((object.ReferenceEquals(this.TeamMembersField, value) != true)) {
                    this.TeamMembersField = value;
                    this.RaisePropertyChanged("TeamMembers");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Sex", Namespace="http://schemas.datacontract.org/2004/07/CARS.Backend.Common")]
    public enum Sex : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Male = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Female = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LeaveStatus", Namespace="http://schemas.datacontract.org/2004/07/CARS.Backend.Common")]
    public enum LeaveStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Applying = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rejected = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Accepted = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Cancelling = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Cancelled = 5,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MonthRank", Namespace="http://schemas.datacontract.org/2004/07/CARS.Backend.Common")]
    public enum MonthRank : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Jan = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Feb = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Mar = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Apr = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        May = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Jun = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Jul = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Aug = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Sep = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Oct = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Nov = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Dec = 12,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CARSService.ICARSService")]
    public interface ICARSService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICARSService/Login", ReplyAction="http://tempuri.org/ICARSService/LoginResponse")]
        System.IAsyncResult BeginLogin(string email, string password, System.AsyncCallback callback, object asyncState);
        
        CARS.CARSService.Employee EndLogin(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICARSService/AddEmployee", ReplyAction="http://tempuri.org/ICARSService/AddEmployeeResponse")]
        System.IAsyncResult BeginAddEmployee(string email, string firstName, string middleName, string lastName, string legalName, CARS.CARSService.Sex gender, float serviceYear, System.DateTime dateOfHire, string supervisorEmail, string costCenterCode, int employeeNum, System.AsyncCallback callback, object asyncState);
        
        CARS.CARSService.Employee EndAddEmployee(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICARSService/UpdateEmployee", ReplyAction="http://tempuri.org/ICARSService/UpdateEmployeeResponse")]
        System.IAsyncResult BeginUpdateEmployee(
                    string employeeID, 
                    string email, 
                    string firstName, 
                    string middleName, 
                    string lastName, 
                    string legalName, 
                    CARS.CARSService.Sex gender, 
                    float serviceYear, 
                    System.DateTime dateOfHire, 
                    string supervisorEmail, 
                    string password, 
                    string phone, 
                    string mobile, 
                    bool isAdmin, 
                    bool isActive, 
                    bool isManager, 
                    string costCenterCode, 
                    int employeeNum, 
                    System.AsyncCallback callback, 
                    object asyncState);
        
        CARS.CARSService.Employee EndUpdateEmployee(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICARSService/GetManagers", ReplyAction="http://tempuri.org/ICARSService/GetManagersResponse")]
        System.IAsyncResult BeginGetManagers(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<CARS.CARSService.Employee> EndGetManagers(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICARSService/ApplyLeave", ReplyAction="http://tempuri.org/ICARSService/ApplyLeaveResponse")]
        System.IAsyncResult BeginApplyLeave(string employeeID, string reason, string leaveType, string description, System.Collections.ObjectModel.ObservableCollection<CARS.CARSService.TimeDurationInfo> durationList, System.AsyncCallback callback, object asyncState);
        
        CARS.CARSService.LeaveInfo EndApplyLeave(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICARSService/GetMyLeaves", ReplyAction="http://tempuri.org/ICARSService/GetMyLeavesResponse")]
        System.IAsyncResult BeginGetMyLeaves(string employeeID, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<CARS.CARSService.LeaveInfo> EndGetMyLeaves(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICARSService/GetMyTeamLeaves", ReplyAction="http://tempuri.org/ICARSService/GetMyTeamLeavesResponse")]
        System.IAsyncResult BeginGetMyTeamLeaves(string employeeID, bool onlyApplyingRecords, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<CARS.CARSService.LeaveInfo> EndGetMyTeamLeaves(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICARSService/ApproveLeave", ReplyAction="http://tempuri.org/ICARSService/ApproveLeaveResponse")]
        System.IAsyncResult BeginApproveLeave(string managerID, string leaveID, CARS.CARSService.LeaveStatus status, System.AsyncCallback callback, object asyncState);
        
        CARS.CARSService.LeaveInfo EndApproveLeave(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICARSService/RejectLeave", ReplyAction="http://tempuri.org/ICARSService/RejectLeaveResponse")]
        System.IAsyncResult BeginRejectLeave(string managerID, string leaveID, CARS.CARSService.LeaveStatus status, string reason, System.AsyncCallback callback, object asyncState);
        
        CARS.CARSService.LeaveInfo EndRejectLeave(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICARSService/GetAnnualLeaveEarnedHours", ReplyAction="http://tempuri.org/ICARSService/GetAnnualLeaveEarnedHoursResponse")]
        System.IAsyncResult BeginGetAnnualLeaveEarnedHours(string employeeID, System.AsyncCallback callback, object asyncState);
        
        int EndGetAnnualLeaveEarnedHours(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICARSService/GetAnnualLeaveUsedHours", ReplyAction="http://tempuri.org/ICARSService/GetAnnualLeaveUsedHoursResponse")]
        System.IAsyncResult BeginGetAnnualLeaveUsedHours(string employeeID, System.AsyncCallback callback, object asyncState);
        
        int EndGetAnnualLeaveUsedHours(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICARSService/GetSickLeaveUsedHours", ReplyAction="http://tempuri.org/ICARSService/GetSickLeaveUsedHoursResponse")]
        System.IAsyncResult BeginGetSickLeaveUsedHours(string employeeID, System.AsyncCallback callback, object asyncState);
        
        int EndGetSickLeaveUsedHours(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICARSService/ForgetPassword", ReplyAction="http://tempuri.org/ICARSService/ForgetPasswordResponse")]
        System.IAsyncResult BeginForgetPassword(string email, System.AsyncCallback callback, object asyncState);
        
        bool EndForgetPassword(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICARSService/GetLeaveTypes", ReplyAction="http://tempuri.org/ICARSService/GetLeaveTypesResponse")]
        System.IAsyncResult BeginGetLeaveTypes(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<CARS.CARSService.LeaveType> EndGetLeaveTypes(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICARSService/FindLeaves", ReplyAction="http://tempuri.org/ICARSService/FindLeavesResponse")]
        System.IAsyncResult BeginFindLeaves(string supervisors, string applicants, string leaveTypeId, string leaveStatus, System.DateTime start, System.DateTime end, string supervisorIDs, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<CARS.CARSService.LeaveInfo> EndFindLeaves(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICARSService/GetAllEmployees", ReplyAction="http://tempuri.org/ICARSService/GetAllEmployeesResponse")]
        System.IAsyncResult BeginGetAllEmployees(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<CARS.CARSService.Employee> EndGetAllEmployees(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICARSService/GetReportPeriods", ReplyAction="http://tempuri.org/ICARSService/GetReportPeriodsResponse")]
        System.IAsyncResult BeginGetReportPeriods(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<CARS.CARSService.ReportPeriod> EndGetReportPeriods(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICARSService/UpdateReportPeriods", ReplyAction="http://tempuri.org/ICARSService/UpdateReportPeriodsResponse")]
        System.IAsyncResult BeginUpdateReportPeriods(System.Collections.ObjectModel.ObservableCollection<CARS.CARSService.ReportPeriod> reportPeriods, System.AsyncCallback callback, object asyncState);
        
        bool EndUpdateReportPeriods(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICARSService/GetVersion", ReplyAction="http://tempuri.org/ICARSService/GetVersionResponse")]
        System.IAsyncResult BeginGetVersion(System.AsyncCallback callback, object asyncState);
        
        string EndGetVersion(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICARSService/GetFrozenDate", ReplyAction="http://tempuri.org/ICARSService/GetFrozenDateResponse")]
        System.IAsyncResult BeginGetFrozenDate(System.AsyncCallback callback, object asyncState);
        
        System.DateTime EndGetFrozenDate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICARSService/GetAnnualLeaveReportForAdminAddress", ReplyAction="http://tempuri.org/ICARSService/GetAnnualLeaveReportForAdminAddressResponse")]
        System.IAsyncResult BeginGetAnnualLeaveReportForAdminAddress(System.AsyncCallback callback, object asyncState);
        
        string EndGetAnnualLeaveReportForAdminAddress(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICARSService/GetSickLeaveReportForAdminAddress", ReplyAction="http://tempuri.org/ICARSService/GetSickLeaveReportForAdminAddressResponse")]
        System.IAsyncResult BeginGetSickLeaveReportForAdminAddress(System.AsyncCallback callback, object asyncState);
        
        string EndGetSickLeaveReportForAdminAddress(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICARSService/GetAnnualLeaveReportForSupervisorAddress", ReplyAction="http://tempuri.org/ICARSService/GetAnnualLeaveReportForSupervisorAddressResponse")]
        System.IAsyncResult BeginGetAnnualLeaveReportForSupervisorAddress(System.AsyncCallback callback, object asyncState);
        
        string EndGetAnnualLeaveReportForSupervisorAddress(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICARSService/GetSickLeaveReportForSupervisorAddress", ReplyAction="http://tempuri.org/ICARSService/GetSickLeaveReportForSupervisorAddressResponse")]
        System.IAsyncResult BeginGetSickLeaveReportForSupervisorAddress(System.AsyncCallback callback, object asyncState);
        
        string EndGetSickLeaveReportForSupervisorAddress(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICARSService/CheckSupervisorValidation", ReplyAction="http://tempuri.org/ICARSService/CheckSupervisorValidationResponse")]
        System.IAsyncResult BeginCheckSupervisorValidation(string employeeID, string supervisorID, System.AsyncCallback callback, object asyncState);
        
        bool EndCheckSupervisorValidation(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICARSService/GetUserManualAddress", ReplyAction="http://tempuri.org/ICARSService/GetUserManualAddressResponse")]
        System.IAsyncResult BeginGetUserManualAddress(System.AsyncCallback callback, object asyncState);
        
        string EndGetUserManualAddress(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICARSService/GetReportBugAddress", ReplyAction="http://tempuri.org/ICARSService/GetReportBugAddressResponse")]
        System.IAsyncResult BeginGetReportBugAddress(System.AsyncCallback callback, object asyncState);
        
        string EndGetReportBugAddress(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICARSService/RecallLeave", ReplyAction="http://tempuri.org/ICARSService/RecallLeaveResponse")]
        System.IAsyncResult BeginRecallLeave(string pkleaveInfoID, string employeeID, System.AsyncCallback callback, object asyncState);
        
        bool EndRecallLeave(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICARSServiceChannel : CARS.CARSService.ICARSService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public CARS.CARSService.Employee Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((CARS.CARSService.Employee)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddEmployeeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddEmployeeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public CARS.CARSService.Employee Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((CARS.CARSService.Employee)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateEmployeeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateEmployeeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public CARS.CARSService.Employee Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((CARS.CARSService.Employee)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetManagersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetManagersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<CARS.CARSService.Employee> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<CARS.CARSService.Employee>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ApplyLeaveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ApplyLeaveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public CARS.CARSService.LeaveInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((CARS.CARSService.LeaveInfo)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetMyLeavesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetMyLeavesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<CARS.CARSService.LeaveInfo> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<CARS.CARSService.LeaveInfo>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetMyTeamLeavesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetMyTeamLeavesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<CARS.CARSService.LeaveInfo> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<CARS.CARSService.LeaveInfo>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ApproveLeaveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ApproveLeaveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public CARS.CARSService.LeaveInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((CARS.CARSService.LeaveInfo)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RejectLeaveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RejectLeaveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public CARS.CARSService.LeaveInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((CARS.CARSService.LeaveInfo)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAnnualLeaveEarnedHoursCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAnnualLeaveEarnedHoursCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAnnualLeaveUsedHoursCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAnnualLeaveUsedHoursCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSickLeaveUsedHoursCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSickLeaveUsedHoursCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ForgetPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ForgetPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetLeaveTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetLeaveTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<CARS.CARSService.LeaveType> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<CARS.CARSService.LeaveType>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FindLeavesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public FindLeavesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<CARS.CARSService.LeaveInfo> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<CARS.CARSService.LeaveInfo>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllEmployeesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllEmployeesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<CARS.CARSService.Employee> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<CARS.CARSService.Employee>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetReportPeriodsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetReportPeriodsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<CARS.CARSService.ReportPeriod> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<CARS.CARSService.ReportPeriod>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateReportPeriodsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateReportPeriodsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetFrozenDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetFrozenDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.DateTime Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAnnualLeaveReportForAdminAddressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAnnualLeaveReportForAdminAddressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSickLeaveReportForAdminAddressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSickLeaveReportForAdminAddressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAnnualLeaveReportForSupervisorAddressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAnnualLeaveReportForSupervisorAddressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSickLeaveReportForSupervisorAddressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSickLeaveReportForSupervisorAddressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CheckSupervisorValidationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CheckSupervisorValidationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetUserManualAddressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetUserManualAddressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetReportBugAddressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetReportBugAddressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RecallLeaveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RecallLeaveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CARSServiceClient : System.ServiceModel.ClientBase<CARS.CARSService.ICARSService>, CARS.CARSService.ICARSService {
        
        private BeginOperationDelegate onBeginLoginDelegate;
        
        private EndOperationDelegate onEndLoginDelegate;
        
        private System.Threading.SendOrPostCallback onLoginCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddEmployeeDelegate;
        
        private EndOperationDelegate onEndAddEmployeeDelegate;
        
        private System.Threading.SendOrPostCallback onAddEmployeeCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateEmployeeDelegate;
        
        private EndOperationDelegate onEndUpdateEmployeeDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateEmployeeCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetManagersDelegate;
        
        private EndOperationDelegate onEndGetManagersDelegate;
        
        private System.Threading.SendOrPostCallback onGetManagersCompletedDelegate;
        
        private BeginOperationDelegate onBeginApplyLeaveDelegate;
        
        private EndOperationDelegate onEndApplyLeaveDelegate;
        
        private System.Threading.SendOrPostCallback onApplyLeaveCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetMyLeavesDelegate;
        
        private EndOperationDelegate onEndGetMyLeavesDelegate;
        
        private System.Threading.SendOrPostCallback onGetMyLeavesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetMyTeamLeavesDelegate;
        
        private EndOperationDelegate onEndGetMyTeamLeavesDelegate;
        
        private System.Threading.SendOrPostCallback onGetMyTeamLeavesCompletedDelegate;
        
        private BeginOperationDelegate onBeginApproveLeaveDelegate;
        
        private EndOperationDelegate onEndApproveLeaveDelegate;
        
        private System.Threading.SendOrPostCallback onApproveLeaveCompletedDelegate;
        
        private BeginOperationDelegate onBeginRejectLeaveDelegate;
        
        private EndOperationDelegate onEndRejectLeaveDelegate;
        
        private System.Threading.SendOrPostCallback onRejectLeaveCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAnnualLeaveEarnedHoursDelegate;
        
        private EndOperationDelegate onEndGetAnnualLeaveEarnedHoursDelegate;
        
        private System.Threading.SendOrPostCallback onGetAnnualLeaveEarnedHoursCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAnnualLeaveUsedHoursDelegate;
        
        private EndOperationDelegate onEndGetAnnualLeaveUsedHoursDelegate;
        
        private System.Threading.SendOrPostCallback onGetAnnualLeaveUsedHoursCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSickLeaveUsedHoursDelegate;
        
        private EndOperationDelegate onEndGetSickLeaveUsedHoursDelegate;
        
        private System.Threading.SendOrPostCallback onGetSickLeaveUsedHoursCompletedDelegate;
        
        private BeginOperationDelegate onBeginForgetPasswordDelegate;
        
        private EndOperationDelegate onEndForgetPasswordDelegate;
        
        private System.Threading.SendOrPostCallback onForgetPasswordCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetLeaveTypesDelegate;
        
        private EndOperationDelegate onEndGetLeaveTypesDelegate;
        
        private System.Threading.SendOrPostCallback onGetLeaveTypesCompletedDelegate;
        
        private BeginOperationDelegate onBeginFindLeavesDelegate;
        
        private EndOperationDelegate onEndFindLeavesDelegate;
        
        private System.Threading.SendOrPostCallback onFindLeavesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllEmployeesDelegate;
        
        private EndOperationDelegate onEndGetAllEmployeesDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllEmployeesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetReportPeriodsDelegate;
        
        private EndOperationDelegate onEndGetReportPeriodsDelegate;
        
        private System.Threading.SendOrPostCallback onGetReportPeriodsCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateReportPeriodsDelegate;
        
        private EndOperationDelegate onEndUpdateReportPeriodsDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateReportPeriodsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetVersionDelegate;
        
        private EndOperationDelegate onEndGetVersionDelegate;
        
        private System.Threading.SendOrPostCallback onGetVersionCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetFrozenDateDelegate;
        
        private EndOperationDelegate onEndGetFrozenDateDelegate;
        
        private System.Threading.SendOrPostCallback onGetFrozenDateCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAnnualLeaveReportForAdminAddressDelegate;
        
        private EndOperationDelegate onEndGetAnnualLeaveReportForAdminAddressDelegate;
        
        private System.Threading.SendOrPostCallback onGetAnnualLeaveReportForAdminAddressCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSickLeaveReportForAdminAddressDelegate;
        
        private EndOperationDelegate onEndGetSickLeaveReportForAdminAddressDelegate;
        
        private System.Threading.SendOrPostCallback onGetSickLeaveReportForAdminAddressCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAnnualLeaveReportForSupervisorAddressDelegate;
        
        private EndOperationDelegate onEndGetAnnualLeaveReportForSupervisorAddressDelegate;
        
        private System.Threading.SendOrPostCallback onGetAnnualLeaveReportForSupervisorAddressCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSickLeaveReportForSupervisorAddressDelegate;
        
        private EndOperationDelegate onEndGetSickLeaveReportForSupervisorAddressDelegate;
        
        private System.Threading.SendOrPostCallback onGetSickLeaveReportForSupervisorAddressCompletedDelegate;
        
        private BeginOperationDelegate onBeginCheckSupervisorValidationDelegate;
        
        private EndOperationDelegate onEndCheckSupervisorValidationDelegate;
        
        private System.Threading.SendOrPostCallback onCheckSupervisorValidationCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetUserManualAddressDelegate;
        
        private EndOperationDelegate onEndGetUserManualAddressDelegate;
        
        private System.Threading.SendOrPostCallback onGetUserManualAddressCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetReportBugAddressDelegate;
        
        private EndOperationDelegate onEndGetReportBugAddressDelegate;
        
        private System.Threading.SendOrPostCallback onGetReportBugAddressCompletedDelegate;
        
        private BeginOperationDelegate onBeginRecallLeaveDelegate;
        
        private EndOperationDelegate onEndRecallLeaveDelegate;
        
        private System.Threading.SendOrPostCallback onRecallLeaveCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public CARSServiceClient() {
        }
        
        public CARSServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CARSServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CARSServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CARSServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<LoginCompletedEventArgs> LoginCompleted;
        
        public event System.EventHandler<AddEmployeeCompletedEventArgs> AddEmployeeCompleted;
        
        public event System.EventHandler<UpdateEmployeeCompletedEventArgs> UpdateEmployeeCompleted;
        
        public event System.EventHandler<GetManagersCompletedEventArgs> GetManagersCompleted;
        
        public event System.EventHandler<ApplyLeaveCompletedEventArgs> ApplyLeaveCompleted;
        
        public event System.EventHandler<GetMyLeavesCompletedEventArgs> GetMyLeavesCompleted;
        
        public event System.EventHandler<GetMyTeamLeavesCompletedEventArgs> GetMyTeamLeavesCompleted;
        
        public event System.EventHandler<ApproveLeaveCompletedEventArgs> ApproveLeaveCompleted;
        
        public event System.EventHandler<RejectLeaveCompletedEventArgs> RejectLeaveCompleted;
        
        public event System.EventHandler<GetAnnualLeaveEarnedHoursCompletedEventArgs> GetAnnualLeaveEarnedHoursCompleted;
        
        public event System.EventHandler<GetAnnualLeaveUsedHoursCompletedEventArgs> GetAnnualLeaveUsedHoursCompleted;
        
        public event System.EventHandler<GetSickLeaveUsedHoursCompletedEventArgs> GetSickLeaveUsedHoursCompleted;
        
        public event System.EventHandler<ForgetPasswordCompletedEventArgs> ForgetPasswordCompleted;
        
        public event System.EventHandler<GetLeaveTypesCompletedEventArgs> GetLeaveTypesCompleted;
        
        public event System.EventHandler<FindLeavesCompletedEventArgs> FindLeavesCompleted;
        
        public event System.EventHandler<GetAllEmployeesCompletedEventArgs> GetAllEmployeesCompleted;
        
        public event System.EventHandler<GetReportPeriodsCompletedEventArgs> GetReportPeriodsCompleted;
        
        public event System.EventHandler<UpdateReportPeriodsCompletedEventArgs> UpdateReportPeriodsCompleted;
        
        public event System.EventHandler<GetVersionCompletedEventArgs> GetVersionCompleted;
        
        public event System.EventHandler<GetFrozenDateCompletedEventArgs> GetFrozenDateCompleted;
        
        public event System.EventHandler<GetAnnualLeaveReportForAdminAddressCompletedEventArgs> GetAnnualLeaveReportForAdminAddressCompleted;
        
        public event System.EventHandler<GetSickLeaveReportForAdminAddressCompletedEventArgs> GetSickLeaveReportForAdminAddressCompleted;
        
        public event System.EventHandler<GetAnnualLeaveReportForSupervisorAddressCompletedEventArgs> GetAnnualLeaveReportForSupervisorAddressCompleted;
        
        public event System.EventHandler<GetSickLeaveReportForSupervisorAddressCompletedEventArgs> GetSickLeaveReportForSupervisorAddressCompleted;
        
        public event System.EventHandler<CheckSupervisorValidationCompletedEventArgs> CheckSupervisorValidationCompleted;
        
        public event System.EventHandler<GetUserManualAddressCompletedEventArgs> GetUserManualAddressCompleted;
        
        public event System.EventHandler<GetReportBugAddressCompletedEventArgs> GetReportBugAddressCompleted;
        
        public event System.EventHandler<RecallLeaveCompletedEventArgs> RecallLeaveCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CARS.CARSService.ICARSService.BeginLogin(string email, string password, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLogin(email, password, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        CARS.CARSService.Employee CARS.CARSService.ICARSService.EndLogin(System.IAsyncResult result) {
            return base.Channel.EndLogin(result);
        }
        
        private System.IAsyncResult OnBeginLogin(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string email = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            return ((CARS.CARSService.ICARSService)(this)).BeginLogin(email, password, callback, asyncState);
        }
        
        private object[] OnEndLogin(System.IAsyncResult result) {
            CARS.CARSService.Employee retVal = ((CARS.CARSService.ICARSService)(this)).EndLogin(result);
            return new object[] {
                    retVal};
        }
        
        private void OnLoginCompleted(object state) {
            if ((this.LoginCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LoginCompleted(this, new LoginCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LoginAsync(string email, string password) {
            this.LoginAsync(email, password, null);
        }
        
        public void LoginAsync(string email, string password, object userState) {
            if ((this.onBeginLoginDelegate == null)) {
                this.onBeginLoginDelegate = new BeginOperationDelegate(this.OnBeginLogin);
            }
            if ((this.onEndLoginDelegate == null)) {
                this.onEndLoginDelegate = new EndOperationDelegate(this.OnEndLogin);
            }
            if ((this.onLoginCompletedDelegate == null)) {
                this.onLoginCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLoginCompleted);
            }
            base.InvokeAsync(this.onBeginLoginDelegate, new object[] {
                        email,
                        password}, this.onEndLoginDelegate, this.onLoginCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CARS.CARSService.ICARSService.BeginAddEmployee(string email, string firstName, string middleName, string lastName, string legalName, CARS.CARSService.Sex gender, float serviceYear, System.DateTime dateOfHire, string supervisorEmail, string costCenterCode, int employeeNum, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddEmployee(email, firstName, middleName, lastName, legalName, gender, serviceYear, dateOfHire, supervisorEmail, costCenterCode, employeeNum, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        CARS.CARSService.Employee CARS.CARSService.ICARSService.EndAddEmployee(System.IAsyncResult result) {
            return base.Channel.EndAddEmployee(result);
        }
        
        private System.IAsyncResult OnBeginAddEmployee(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string email = ((string)(inValues[0]));
            string firstName = ((string)(inValues[1]));
            string middleName = ((string)(inValues[2]));
            string lastName = ((string)(inValues[3]));
            string legalName = ((string)(inValues[4]));
            CARS.CARSService.Sex gender = ((CARS.CARSService.Sex)(inValues[5]));
            float serviceYear = ((float)(inValues[6]));
            System.DateTime dateOfHire = ((System.DateTime)(inValues[7]));
            string supervisorEmail = ((string)(inValues[8]));
            string costCenterCode = ((string)(inValues[9]));
            int employeeNum = ((int)(inValues[10]));
            return ((CARS.CARSService.ICARSService)(this)).BeginAddEmployee(email, firstName, middleName, lastName, legalName, gender, serviceYear, dateOfHire, supervisorEmail, costCenterCode, employeeNum, callback, asyncState);
        }
        
        private object[] OnEndAddEmployee(System.IAsyncResult result) {
            CARS.CARSService.Employee retVal = ((CARS.CARSService.ICARSService)(this)).EndAddEmployee(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddEmployeeCompleted(object state) {
            if ((this.AddEmployeeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddEmployeeCompleted(this, new AddEmployeeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddEmployeeAsync(string email, string firstName, string middleName, string lastName, string legalName, CARS.CARSService.Sex gender, float serviceYear, System.DateTime dateOfHire, string supervisorEmail, string costCenterCode, int employeeNum) {
            this.AddEmployeeAsync(email, firstName, middleName, lastName, legalName, gender, serviceYear, dateOfHire, supervisorEmail, costCenterCode, employeeNum, null);
        }
        
        public void AddEmployeeAsync(string email, string firstName, string middleName, string lastName, string legalName, CARS.CARSService.Sex gender, float serviceYear, System.DateTime dateOfHire, string supervisorEmail, string costCenterCode, int employeeNum, object userState) {
            if ((this.onBeginAddEmployeeDelegate == null)) {
                this.onBeginAddEmployeeDelegate = new BeginOperationDelegate(this.OnBeginAddEmployee);
            }
            if ((this.onEndAddEmployeeDelegate == null)) {
                this.onEndAddEmployeeDelegate = new EndOperationDelegate(this.OnEndAddEmployee);
            }
            if ((this.onAddEmployeeCompletedDelegate == null)) {
                this.onAddEmployeeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddEmployeeCompleted);
            }
            base.InvokeAsync(this.onBeginAddEmployeeDelegate, new object[] {
                        email,
                        firstName,
                        middleName,
                        lastName,
                        legalName,
                        gender,
                        serviceYear,
                        dateOfHire,
                        supervisorEmail,
                        costCenterCode,
                        employeeNum}, this.onEndAddEmployeeDelegate, this.onAddEmployeeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CARS.CARSService.ICARSService.BeginUpdateEmployee(
                    string employeeID, 
                    string email, 
                    string firstName, 
                    string middleName, 
                    string lastName, 
                    string legalName, 
                    CARS.CARSService.Sex gender, 
                    float serviceYear, 
                    System.DateTime dateOfHire, 
                    string supervisorEmail, 
                    string password, 
                    string phone, 
                    string mobile, 
                    bool isAdmin, 
                    bool isActive, 
                    bool isManager, 
                    string costCenterCode, 
                    int employeeNum, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return base.Channel.BeginUpdateEmployee(employeeID, email, firstName, middleName, lastName, legalName, gender, serviceYear, dateOfHire, supervisorEmail, password, phone, mobile, isAdmin, isActive, isManager, costCenterCode, employeeNum, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        CARS.CARSService.Employee CARS.CARSService.ICARSService.EndUpdateEmployee(System.IAsyncResult result) {
            return base.Channel.EndUpdateEmployee(result);
        }
        
        private System.IAsyncResult OnBeginUpdateEmployee(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string employeeID = ((string)(inValues[0]));
            string email = ((string)(inValues[1]));
            string firstName = ((string)(inValues[2]));
            string middleName = ((string)(inValues[3]));
            string lastName = ((string)(inValues[4]));
            string legalName = ((string)(inValues[5]));
            CARS.CARSService.Sex gender = ((CARS.CARSService.Sex)(inValues[6]));
            float serviceYear = ((float)(inValues[7]));
            System.DateTime dateOfHire = ((System.DateTime)(inValues[8]));
            string supervisorEmail = ((string)(inValues[9]));
            string password = ((string)(inValues[10]));
            string phone = ((string)(inValues[11]));
            string mobile = ((string)(inValues[12]));
            bool isAdmin = ((bool)(inValues[13]));
            bool isActive = ((bool)(inValues[14]));
            bool isManager = ((bool)(inValues[15]));
            string costCenterCode = ((string)(inValues[16]));
            int employeeNum = ((int)(inValues[17]));
            return ((CARS.CARSService.ICARSService)(this)).BeginUpdateEmployee(employeeID, email, firstName, middleName, lastName, legalName, gender, serviceYear, dateOfHire, supervisorEmail, password, phone, mobile, isAdmin, isActive, isManager, costCenterCode, employeeNum, callback, asyncState);
        }
        
        private object[] OnEndUpdateEmployee(System.IAsyncResult result) {
            CARS.CARSService.Employee retVal = ((CARS.CARSService.ICARSService)(this)).EndUpdateEmployee(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateEmployeeCompleted(object state) {
            if ((this.UpdateEmployeeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateEmployeeCompleted(this, new UpdateEmployeeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateEmployeeAsync(
                    string employeeID, 
                    string email, 
                    string firstName, 
                    string middleName, 
                    string lastName, 
                    string legalName, 
                    CARS.CARSService.Sex gender, 
                    float serviceYear, 
                    System.DateTime dateOfHire, 
                    string supervisorEmail, 
                    string password, 
                    string phone, 
                    string mobile, 
                    bool isAdmin, 
                    bool isActive, 
                    bool isManager, 
                    string costCenterCode, 
                    int employeeNum) {
            this.UpdateEmployeeAsync(employeeID, email, firstName, middleName, lastName, legalName, gender, serviceYear, dateOfHire, supervisorEmail, password, phone, mobile, isAdmin, isActive, isManager, costCenterCode, employeeNum, null);
        }
        
        public void UpdateEmployeeAsync(
                    string employeeID, 
                    string email, 
                    string firstName, 
                    string middleName, 
                    string lastName, 
                    string legalName, 
                    CARS.CARSService.Sex gender, 
                    float serviceYear, 
                    System.DateTime dateOfHire, 
                    string supervisorEmail, 
                    string password, 
                    string phone, 
                    string mobile, 
                    bool isAdmin, 
                    bool isActive, 
                    bool isManager, 
                    string costCenterCode, 
                    int employeeNum, 
                    object userState) {
            if ((this.onBeginUpdateEmployeeDelegate == null)) {
                this.onBeginUpdateEmployeeDelegate = new BeginOperationDelegate(this.OnBeginUpdateEmployee);
            }
            if ((this.onEndUpdateEmployeeDelegate == null)) {
                this.onEndUpdateEmployeeDelegate = new EndOperationDelegate(this.OnEndUpdateEmployee);
            }
            if ((this.onUpdateEmployeeCompletedDelegate == null)) {
                this.onUpdateEmployeeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateEmployeeCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateEmployeeDelegate, new object[] {
                        employeeID,
                        email,
                        firstName,
                        middleName,
                        lastName,
                        legalName,
                        gender,
                        serviceYear,
                        dateOfHire,
                        supervisorEmail,
                        password,
                        phone,
                        mobile,
                        isAdmin,
                        isActive,
                        isManager,
                        costCenterCode,
                        employeeNum}, this.onEndUpdateEmployeeDelegate, this.onUpdateEmployeeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CARS.CARSService.ICARSService.BeginGetManagers(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetManagers(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<CARS.CARSService.Employee> CARS.CARSService.ICARSService.EndGetManagers(System.IAsyncResult result) {
            return base.Channel.EndGetManagers(result);
        }
        
        private System.IAsyncResult OnBeginGetManagers(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((CARS.CARSService.ICARSService)(this)).BeginGetManagers(callback, asyncState);
        }
        
        private object[] OnEndGetManagers(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<CARS.CARSService.Employee> retVal = ((CARS.CARSService.ICARSService)(this)).EndGetManagers(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetManagersCompleted(object state) {
            if ((this.GetManagersCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetManagersCompleted(this, new GetManagersCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetManagersAsync() {
            this.GetManagersAsync(null);
        }
        
        public void GetManagersAsync(object userState) {
            if ((this.onBeginGetManagersDelegate == null)) {
                this.onBeginGetManagersDelegate = new BeginOperationDelegate(this.OnBeginGetManagers);
            }
            if ((this.onEndGetManagersDelegate == null)) {
                this.onEndGetManagersDelegate = new EndOperationDelegate(this.OnEndGetManagers);
            }
            if ((this.onGetManagersCompletedDelegate == null)) {
                this.onGetManagersCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetManagersCompleted);
            }
            base.InvokeAsync(this.onBeginGetManagersDelegate, null, this.onEndGetManagersDelegate, this.onGetManagersCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CARS.CARSService.ICARSService.BeginApplyLeave(string employeeID, string reason, string leaveType, string description, System.Collections.ObjectModel.ObservableCollection<CARS.CARSService.TimeDurationInfo> durationList, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginApplyLeave(employeeID, reason, leaveType, description, durationList, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        CARS.CARSService.LeaveInfo CARS.CARSService.ICARSService.EndApplyLeave(System.IAsyncResult result) {
            return base.Channel.EndApplyLeave(result);
        }
        
        private System.IAsyncResult OnBeginApplyLeave(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string employeeID = ((string)(inValues[0]));
            string reason = ((string)(inValues[1]));
            string leaveType = ((string)(inValues[2]));
            string description = ((string)(inValues[3]));
            System.Collections.ObjectModel.ObservableCollection<CARS.CARSService.TimeDurationInfo> durationList = ((System.Collections.ObjectModel.ObservableCollection<CARS.CARSService.TimeDurationInfo>)(inValues[4]));
            return ((CARS.CARSService.ICARSService)(this)).BeginApplyLeave(employeeID, reason, leaveType, description, durationList, callback, asyncState);
        }
        
        private object[] OnEndApplyLeave(System.IAsyncResult result) {
            CARS.CARSService.LeaveInfo retVal = ((CARS.CARSService.ICARSService)(this)).EndApplyLeave(result);
            return new object[] {
                    retVal};
        }
        
        private void OnApplyLeaveCompleted(object state) {
            if ((this.ApplyLeaveCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ApplyLeaveCompleted(this, new ApplyLeaveCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ApplyLeaveAsync(string employeeID, string reason, string leaveType, string description, System.Collections.ObjectModel.ObservableCollection<CARS.CARSService.TimeDurationInfo> durationList) {
            this.ApplyLeaveAsync(employeeID, reason, leaveType, description, durationList, null);
        }
        
        public void ApplyLeaveAsync(string employeeID, string reason, string leaveType, string description, System.Collections.ObjectModel.ObservableCollection<CARS.CARSService.TimeDurationInfo> durationList, object userState) {
            if ((this.onBeginApplyLeaveDelegate == null)) {
                this.onBeginApplyLeaveDelegate = new BeginOperationDelegate(this.OnBeginApplyLeave);
            }
            if ((this.onEndApplyLeaveDelegate == null)) {
                this.onEndApplyLeaveDelegate = new EndOperationDelegate(this.OnEndApplyLeave);
            }
            if ((this.onApplyLeaveCompletedDelegate == null)) {
                this.onApplyLeaveCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnApplyLeaveCompleted);
            }
            base.InvokeAsync(this.onBeginApplyLeaveDelegate, new object[] {
                        employeeID,
                        reason,
                        leaveType,
                        description,
                        durationList}, this.onEndApplyLeaveDelegate, this.onApplyLeaveCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CARS.CARSService.ICARSService.BeginGetMyLeaves(string employeeID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetMyLeaves(employeeID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<CARS.CARSService.LeaveInfo> CARS.CARSService.ICARSService.EndGetMyLeaves(System.IAsyncResult result) {
            return base.Channel.EndGetMyLeaves(result);
        }
        
        private System.IAsyncResult OnBeginGetMyLeaves(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string employeeID = ((string)(inValues[0]));
            return ((CARS.CARSService.ICARSService)(this)).BeginGetMyLeaves(employeeID, callback, asyncState);
        }
        
        private object[] OnEndGetMyLeaves(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<CARS.CARSService.LeaveInfo> retVal = ((CARS.CARSService.ICARSService)(this)).EndGetMyLeaves(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetMyLeavesCompleted(object state) {
            if ((this.GetMyLeavesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetMyLeavesCompleted(this, new GetMyLeavesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetMyLeavesAsync(string employeeID) {
            this.GetMyLeavesAsync(employeeID, null);
        }
        
        public void GetMyLeavesAsync(string employeeID, object userState) {
            if ((this.onBeginGetMyLeavesDelegate == null)) {
                this.onBeginGetMyLeavesDelegate = new BeginOperationDelegate(this.OnBeginGetMyLeaves);
            }
            if ((this.onEndGetMyLeavesDelegate == null)) {
                this.onEndGetMyLeavesDelegate = new EndOperationDelegate(this.OnEndGetMyLeaves);
            }
            if ((this.onGetMyLeavesCompletedDelegate == null)) {
                this.onGetMyLeavesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetMyLeavesCompleted);
            }
            base.InvokeAsync(this.onBeginGetMyLeavesDelegate, new object[] {
                        employeeID}, this.onEndGetMyLeavesDelegate, this.onGetMyLeavesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CARS.CARSService.ICARSService.BeginGetMyTeamLeaves(string employeeID, bool onlyApplyingRecords, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetMyTeamLeaves(employeeID, onlyApplyingRecords, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<CARS.CARSService.LeaveInfo> CARS.CARSService.ICARSService.EndGetMyTeamLeaves(System.IAsyncResult result) {
            return base.Channel.EndGetMyTeamLeaves(result);
        }
        
        private System.IAsyncResult OnBeginGetMyTeamLeaves(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string employeeID = ((string)(inValues[0]));
            bool onlyApplyingRecords = ((bool)(inValues[1]));
            return ((CARS.CARSService.ICARSService)(this)).BeginGetMyTeamLeaves(employeeID, onlyApplyingRecords, callback, asyncState);
        }
        
        private object[] OnEndGetMyTeamLeaves(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<CARS.CARSService.LeaveInfo> retVal = ((CARS.CARSService.ICARSService)(this)).EndGetMyTeamLeaves(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetMyTeamLeavesCompleted(object state) {
            if ((this.GetMyTeamLeavesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetMyTeamLeavesCompleted(this, new GetMyTeamLeavesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetMyTeamLeavesAsync(string employeeID, bool onlyApplyingRecords) {
            this.GetMyTeamLeavesAsync(employeeID, onlyApplyingRecords, null);
        }
        
        public void GetMyTeamLeavesAsync(string employeeID, bool onlyApplyingRecords, object userState) {
            if ((this.onBeginGetMyTeamLeavesDelegate == null)) {
                this.onBeginGetMyTeamLeavesDelegate = new BeginOperationDelegate(this.OnBeginGetMyTeamLeaves);
            }
            if ((this.onEndGetMyTeamLeavesDelegate == null)) {
                this.onEndGetMyTeamLeavesDelegate = new EndOperationDelegate(this.OnEndGetMyTeamLeaves);
            }
            if ((this.onGetMyTeamLeavesCompletedDelegate == null)) {
                this.onGetMyTeamLeavesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetMyTeamLeavesCompleted);
            }
            base.InvokeAsync(this.onBeginGetMyTeamLeavesDelegate, new object[] {
                        employeeID,
                        onlyApplyingRecords}, this.onEndGetMyTeamLeavesDelegate, this.onGetMyTeamLeavesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CARS.CARSService.ICARSService.BeginApproveLeave(string managerID, string leaveID, CARS.CARSService.LeaveStatus status, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginApproveLeave(managerID, leaveID, status, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        CARS.CARSService.LeaveInfo CARS.CARSService.ICARSService.EndApproveLeave(System.IAsyncResult result) {
            return base.Channel.EndApproveLeave(result);
        }
        
        private System.IAsyncResult OnBeginApproveLeave(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string managerID = ((string)(inValues[0]));
            string leaveID = ((string)(inValues[1]));
            CARS.CARSService.LeaveStatus status = ((CARS.CARSService.LeaveStatus)(inValues[2]));
            return ((CARS.CARSService.ICARSService)(this)).BeginApproveLeave(managerID, leaveID, status, callback, asyncState);
        }
        
        private object[] OnEndApproveLeave(System.IAsyncResult result) {
            CARS.CARSService.LeaveInfo retVal = ((CARS.CARSService.ICARSService)(this)).EndApproveLeave(result);
            return new object[] {
                    retVal};
        }
        
        private void OnApproveLeaveCompleted(object state) {
            if ((this.ApproveLeaveCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ApproveLeaveCompleted(this, new ApproveLeaveCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ApproveLeaveAsync(string managerID, string leaveID, CARS.CARSService.LeaveStatus status) {
            this.ApproveLeaveAsync(managerID, leaveID, status, null);
        }
        
        public void ApproveLeaveAsync(string managerID, string leaveID, CARS.CARSService.LeaveStatus status, object userState) {
            if ((this.onBeginApproveLeaveDelegate == null)) {
                this.onBeginApproveLeaveDelegate = new BeginOperationDelegate(this.OnBeginApproveLeave);
            }
            if ((this.onEndApproveLeaveDelegate == null)) {
                this.onEndApproveLeaveDelegate = new EndOperationDelegate(this.OnEndApproveLeave);
            }
            if ((this.onApproveLeaveCompletedDelegate == null)) {
                this.onApproveLeaveCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnApproveLeaveCompleted);
            }
            base.InvokeAsync(this.onBeginApproveLeaveDelegate, new object[] {
                        managerID,
                        leaveID,
                        status}, this.onEndApproveLeaveDelegate, this.onApproveLeaveCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CARS.CARSService.ICARSService.BeginRejectLeave(string managerID, string leaveID, CARS.CARSService.LeaveStatus status, string reason, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRejectLeave(managerID, leaveID, status, reason, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        CARS.CARSService.LeaveInfo CARS.CARSService.ICARSService.EndRejectLeave(System.IAsyncResult result) {
            return base.Channel.EndRejectLeave(result);
        }
        
        private System.IAsyncResult OnBeginRejectLeave(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string managerID = ((string)(inValues[0]));
            string leaveID = ((string)(inValues[1]));
            CARS.CARSService.LeaveStatus status = ((CARS.CARSService.LeaveStatus)(inValues[2]));
            string reason = ((string)(inValues[3]));
            return ((CARS.CARSService.ICARSService)(this)).BeginRejectLeave(managerID, leaveID, status, reason, callback, asyncState);
        }
        
        private object[] OnEndRejectLeave(System.IAsyncResult result) {
            CARS.CARSService.LeaveInfo retVal = ((CARS.CARSService.ICARSService)(this)).EndRejectLeave(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRejectLeaveCompleted(object state) {
            if ((this.RejectLeaveCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RejectLeaveCompleted(this, new RejectLeaveCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RejectLeaveAsync(string managerID, string leaveID, CARS.CARSService.LeaveStatus status, string reason) {
            this.RejectLeaveAsync(managerID, leaveID, status, reason, null);
        }
        
        public void RejectLeaveAsync(string managerID, string leaveID, CARS.CARSService.LeaveStatus status, string reason, object userState) {
            if ((this.onBeginRejectLeaveDelegate == null)) {
                this.onBeginRejectLeaveDelegate = new BeginOperationDelegate(this.OnBeginRejectLeave);
            }
            if ((this.onEndRejectLeaveDelegate == null)) {
                this.onEndRejectLeaveDelegate = new EndOperationDelegate(this.OnEndRejectLeave);
            }
            if ((this.onRejectLeaveCompletedDelegate == null)) {
                this.onRejectLeaveCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRejectLeaveCompleted);
            }
            base.InvokeAsync(this.onBeginRejectLeaveDelegate, new object[] {
                        managerID,
                        leaveID,
                        status,
                        reason}, this.onEndRejectLeaveDelegate, this.onRejectLeaveCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CARS.CARSService.ICARSService.BeginGetAnnualLeaveEarnedHours(string employeeID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAnnualLeaveEarnedHours(employeeID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int CARS.CARSService.ICARSService.EndGetAnnualLeaveEarnedHours(System.IAsyncResult result) {
            return base.Channel.EndGetAnnualLeaveEarnedHours(result);
        }
        
        private System.IAsyncResult OnBeginGetAnnualLeaveEarnedHours(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string employeeID = ((string)(inValues[0]));
            return ((CARS.CARSService.ICARSService)(this)).BeginGetAnnualLeaveEarnedHours(employeeID, callback, asyncState);
        }
        
        private object[] OnEndGetAnnualLeaveEarnedHours(System.IAsyncResult result) {
            int retVal = ((CARS.CARSService.ICARSService)(this)).EndGetAnnualLeaveEarnedHours(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAnnualLeaveEarnedHoursCompleted(object state) {
            if ((this.GetAnnualLeaveEarnedHoursCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAnnualLeaveEarnedHoursCompleted(this, new GetAnnualLeaveEarnedHoursCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAnnualLeaveEarnedHoursAsync(string employeeID) {
            this.GetAnnualLeaveEarnedHoursAsync(employeeID, null);
        }
        
        public void GetAnnualLeaveEarnedHoursAsync(string employeeID, object userState) {
            if ((this.onBeginGetAnnualLeaveEarnedHoursDelegate == null)) {
                this.onBeginGetAnnualLeaveEarnedHoursDelegate = new BeginOperationDelegate(this.OnBeginGetAnnualLeaveEarnedHours);
            }
            if ((this.onEndGetAnnualLeaveEarnedHoursDelegate == null)) {
                this.onEndGetAnnualLeaveEarnedHoursDelegate = new EndOperationDelegate(this.OnEndGetAnnualLeaveEarnedHours);
            }
            if ((this.onGetAnnualLeaveEarnedHoursCompletedDelegate == null)) {
                this.onGetAnnualLeaveEarnedHoursCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAnnualLeaveEarnedHoursCompleted);
            }
            base.InvokeAsync(this.onBeginGetAnnualLeaveEarnedHoursDelegate, new object[] {
                        employeeID}, this.onEndGetAnnualLeaveEarnedHoursDelegate, this.onGetAnnualLeaveEarnedHoursCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CARS.CARSService.ICARSService.BeginGetAnnualLeaveUsedHours(string employeeID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAnnualLeaveUsedHours(employeeID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int CARS.CARSService.ICARSService.EndGetAnnualLeaveUsedHours(System.IAsyncResult result) {
            return base.Channel.EndGetAnnualLeaveUsedHours(result);
        }
        
        private System.IAsyncResult OnBeginGetAnnualLeaveUsedHours(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string employeeID = ((string)(inValues[0]));
            return ((CARS.CARSService.ICARSService)(this)).BeginGetAnnualLeaveUsedHours(employeeID, callback, asyncState);
        }
        
        private object[] OnEndGetAnnualLeaveUsedHours(System.IAsyncResult result) {
            int retVal = ((CARS.CARSService.ICARSService)(this)).EndGetAnnualLeaveUsedHours(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAnnualLeaveUsedHoursCompleted(object state) {
            if ((this.GetAnnualLeaveUsedHoursCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAnnualLeaveUsedHoursCompleted(this, new GetAnnualLeaveUsedHoursCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAnnualLeaveUsedHoursAsync(string employeeID) {
            this.GetAnnualLeaveUsedHoursAsync(employeeID, null);
        }
        
        public void GetAnnualLeaveUsedHoursAsync(string employeeID, object userState) {
            if ((this.onBeginGetAnnualLeaveUsedHoursDelegate == null)) {
                this.onBeginGetAnnualLeaveUsedHoursDelegate = new BeginOperationDelegate(this.OnBeginGetAnnualLeaveUsedHours);
            }
            if ((this.onEndGetAnnualLeaveUsedHoursDelegate == null)) {
                this.onEndGetAnnualLeaveUsedHoursDelegate = new EndOperationDelegate(this.OnEndGetAnnualLeaveUsedHours);
            }
            if ((this.onGetAnnualLeaveUsedHoursCompletedDelegate == null)) {
                this.onGetAnnualLeaveUsedHoursCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAnnualLeaveUsedHoursCompleted);
            }
            base.InvokeAsync(this.onBeginGetAnnualLeaveUsedHoursDelegate, new object[] {
                        employeeID}, this.onEndGetAnnualLeaveUsedHoursDelegate, this.onGetAnnualLeaveUsedHoursCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CARS.CARSService.ICARSService.BeginGetSickLeaveUsedHours(string employeeID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSickLeaveUsedHours(employeeID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int CARS.CARSService.ICARSService.EndGetSickLeaveUsedHours(System.IAsyncResult result) {
            return base.Channel.EndGetSickLeaveUsedHours(result);
        }
        
        private System.IAsyncResult OnBeginGetSickLeaveUsedHours(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string employeeID = ((string)(inValues[0]));
            return ((CARS.CARSService.ICARSService)(this)).BeginGetSickLeaveUsedHours(employeeID, callback, asyncState);
        }
        
        private object[] OnEndGetSickLeaveUsedHours(System.IAsyncResult result) {
            int retVal = ((CARS.CARSService.ICARSService)(this)).EndGetSickLeaveUsedHours(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSickLeaveUsedHoursCompleted(object state) {
            if ((this.GetSickLeaveUsedHoursCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSickLeaveUsedHoursCompleted(this, new GetSickLeaveUsedHoursCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSickLeaveUsedHoursAsync(string employeeID) {
            this.GetSickLeaveUsedHoursAsync(employeeID, null);
        }
        
        public void GetSickLeaveUsedHoursAsync(string employeeID, object userState) {
            if ((this.onBeginGetSickLeaveUsedHoursDelegate == null)) {
                this.onBeginGetSickLeaveUsedHoursDelegate = new BeginOperationDelegate(this.OnBeginGetSickLeaveUsedHours);
            }
            if ((this.onEndGetSickLeaveUsedHoursDelegate == null)) {
                this.onEndGetSickLeaveUsedHoursDelegate = new EndOperationDelegate(this.OnEndGetSickLeaveUsedHours);
            }
            if ((this.onGetSickLeaveUsedHoursCompletedDelegate == null)) {
                this.onGetSickLeaveUsedHoursCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSickLeaveUsedHoursCompleted);
            }
            base.InvokeAsync(this.onBeginGetSickLeaveUsedHoursDelegate, new object[] {
                        employeeID}, this.onEndGetSickLeaveUsedHoursDelegate, this.onGetSickLeaveUsedHoursCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CARS.CARSService.ICARSService.BeginForgetPassword(string email, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginForgetPassword(email, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool CARS.CARSService.ICARSService.EndForgetPassword(System.IAsyncResult result) {
            return base.Channel.EndForgetPassword(result);
        }
        
        private System.IAsyncResult OnBeginForgetPassword(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string email = ((string)(inValues[0]));
            return ((CARS.CARSService.ICARSService)(this)).BeginForgetPassword(email, callback, asyncState);
        }
        
        private object[] OnEndForgetPassword(System.IAsyncResult result) {
            bool retVal = ((CARS.CARSService.ICARSService)(this)).EndForgetPassword(result);
            return new object[] {
                    retVal};
        }
        
        private void OnForgetPasswordCompleted(object state) {
            if ((this.ForgetPasswordCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ForgetPasswordCompleted(this, new ForgetPasswordCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ForgetPasswordAsync(string email) {
            this.ForgetPasswordAsync(email, null);
        }
        
        public void ForgetPasswordAsync(string email, object userState) {
            if ((this.onBeginForgetPasswordDelegate == null)) {
                this.onBeginForgetPasswordDelegate = new BeginOperationDelegate(this.OnBeginForgetPassword);
            }
            if ((this.onEndForgetPasswordDelegate == null)) {
                this.onEndForgetPasswordDelegate = new EndOperationDelegate(this.OnEndForgetPassword);
            }
            if ((this.onForgetPasswordCompletedDelegate == null)) {
                this.onForgetPasswordCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnForgetPasswordCompleted);
            }
            base.InvokeAsync(this.onBeginForgetPasswordDelegate, new object[] {
                        email}, this.onEndForgetPasswordDelegate, this.onForgetPasswordCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CARS.CARSService.ICARSService.BeginGetLeaveTypes(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetLeaveTypes(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<CARS.CARSService.LeaveType> CARS.CARSService.ICARSService.EndGetLeaveTypes(System.IAsyncResult result) {
            return base.Channel.EndGetLeaveTypes(result);
        }
        
        private System.IAsyncResult OnBeginGetLeaveTypes(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((CARS.CARSService.ICARSService)(this)).BeginGetLeaveTypes(callback, asyncState);
        }
        
        private object[] OnEndGetLeaveTypes(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<CARS.CARSService.LeaveType> retVal = ((CARS.CARSService.ICARSService)(this)).EndGetLeaveTypes(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetLeaveTypesCompleted(object state) {
            if ((this.GetLeaveTypesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetLeaveTypesCompleted(this, new GetLeaveTypesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetLeaveTypesAsync() {
            this.GetLeaveTypesAsync(null);
        }
        
        public void GetLeaveTypesAsync(object userState) {
            if ((this.onBeginGetLeaveTypesDelegate == null)) {
                this.onBeginGetLeaveTypesDelegate = new BeginOperationDelegate(this.OnBeginGetLeaveTypes);
            }
            if ((this.onEndGetLeaveTypesDelegate == null)) {
                this.onEndGetLeaveTypesDelegate = new EndOperationDelegate(this.OnEndGetLeaveTypes);
            }
            if ((this.onGetLeaveTypesCompletedDelegate == null)) {
                this.onGetLeaveTypesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetLeaveTypesCompleted);
            }
            base.InvokeAsync(this.onBeginGetLeaveTypesDelegate, null, this.onEndGetLeaveTypesDelegate, this.onGetLeaveTypesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CARS.CARSService.ICARSService.BeginFindLeaves(string supervisors, string applicants, string leaveTypeId, string leaveStatus, System.DateTime start, System.DateTime end, string supervisorIDs, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginFindLeaves(supervisors, applicants, leaveTypeId, leaveStatus, start, end, supervisorIDs, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<CARS.CARSService.LeaveInfo> CARS.CARSService.ICARSService.EndFindLeaves(System.IAsyncResult result) {
            return base.Channel.EndFindLeaves(result);
        }
        
        private System.IAsyncResult OnBeginFindLeaves(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string supervisors = ((string)(inValues[0]));
            string applicants = ((string)(inValues[1]));
            string leaveTypeId = ((string)(inValues[2]));
            string leaveStatus = ((string)(inValues[3]));
            System.DateTime start = ((System.DateTime)(inValues[4]));
            System.DateTime end = ((System.DateTime)(inValues[5]));
            string supervisorIDs = ((string)(inValues[6]));
            return ((CARS.CARSService.ICARSService)(this)).BeginFindLeaves(supervisors, applicants, leaveTypeId, leaveStatus, start, end, supervisorIDs, callback, asyncState);
        }
        
        private object[] OnEndFindLeaves(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<CARS.CARSService.LeaveInfo> retVal = ((CARS.CARSService.ICARSService)(this)).EndFindLeaves(result);
            return new object[] {
                    retVal};
        }
        
        private void OnFindLeavesCompleted(object state) {
            if ((this.FindLeavesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.FindLeavesCompleted(this, new FindLeavesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void FindLeavesAsync(string supervisors, string applicants, string leaveTypeId, string leaveStatus, System.DateTime start, System.DateTime end, string supervisorIDs) {
            this.FindLeavesAsync(supervisors, applicants, leaveTypeId, leaveStatus, start, end, supervisorIDs, null);
        }
        
        public void FindLeavesAsync(string supervisors, string applicants, string leaveTypeId, string leaveStatus, System.DateTime start, System.DateTime end, string supervisorIDs, object userState) {
            if ((this.onBeginFindLeavesDelegate == null)) {
                this.onBeginFindLeavesDelegate = new BeginOperationDelegate(this.OnBeginFindLeaves);
            }
            if ((this.onEndFindLeavesDelegate == null)) {
                this.onEndFindLeavesDelegate = new EndOperationDelegate(this.OnEndFindLeaves);
            }
            if ((this.onFindLeavesCompletedDelegate == null)) {
                this.onFindLeavesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnFindLeavesCompleted);
            }
            base.InvokeAsync(this.onBeginFindLeavesDelegate, new object[] {
                        supervisors,
                        applicants,
                        leaveTypeId,
                        leaveStatus,
                        start,
                        end,
                        supervisorIDs}, this.onEndFindLeavesDelegate, this.onFindLeavesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CARS.CARSService.ICARSService.BeginGetAllEmployees(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllEmployees(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<CARS.CARSService.Employee> CARS.CARSService.ICARSService.EndGetAllEmployees(System.IAsyncResult result) {
            return base.Channel.EndGetAllEmployees(result);
        }
        
        private System.IAsyncResult OnBeginGetAllEmployees(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((CARS.CARSService.ICARSService)(this)).BeginGetAllEmployees(callback, asyncState);
        }
        
        private object[] OnEndGetAllEmployees(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<CARS.CARSService.Employee> retVal = ((CARS.CARSService.ICARSService)(this)).EndGetAllEmployees(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllEmployeesCompleted(object state) {
            if ((this.GetAllEmployeesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllEmployeesCompleted(this, new GetAllEmployeesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllEmployeesAsync() {
            this.GetAllEmployeesAsync(null);
        }
        
        public void GetAllEmployeesAsync(object userState) {
            if ((this.onBeginGetAllEmployeesDelegate == null)) {
                this.onBeginGetAllEmployeesDelegate = new BeginOperationDelegate(this.OnBeginGetAllEmployees);
            }
            if ((this.onEndGetAllEmployeesDelegate == null)) {
                this.onEndGetAllEmployeesDelegate = new EndOperationDelegate(this.OnEndGetAllEmployees);
            }
            if ((this.onGetAllEmployeesCompletedDelegate == null)) {
                this.onGetAllEmployeesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllEmployeesCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllEmployeesDelegate, null, this.onEndGetAllEmployeesDelegate, this.onGetAllEmployeesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CARS.CARSService.ICARSService.BeginGetReportPeriods(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetReportPeriods(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<CARS.CARSService.ReportPeriod> CARS.CARSService.ICARSService.EndGetReportPeriods(System.IAsyncResult result) {
            return base.Channel.EndGetReportPeriods(result);
        }
        
        private System.IAsyncResult OnBeginGetReportPeriods(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((CARS.CARSService.ICARSService)(this)).BeginGetReportPeriods(callback, asyncState);
        }
        
        private object[] OnEndGetReportPeriods(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<CARS.CARSService.ReportPeriod> retVal = ((CARS.CARSService.ICARSService)(this)).EndGetReportPeriods(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetReportPeriodsCompleted(object state) {
            if ((this.GetReportPeriodsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetReportPeriodsCompleted(this, new GetReportPeriodsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetReportPeriodsAsync() {
            this.GetReportPeriodsAsync(null);
        }
        
        public void GetReportPeriodsAsync(object userState) {
            if ((this.onBeginGetReportPeriodsDelegate == null)) {
                this.onBeginGetReportPeriodsDelegate = new BeginOperationDelegate(this.OnBeginGetReportPeriods);
            }
            if ((this.onEndGetReportPeriodsDelegate == null)) {
                this.onEndGetReportPeriodsDelegate = new EndOperationDelegate(this.OnEndGetReportPeriods);
            }
            if ((this.onGetReportPeriodsCompletedDelegate == null)) {
                this.onGetReportPeriodsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetReportPeriodsCompleted);
            }
            base.InvokeAsync(this.onBeginGetReportPeriodsDelegate, null, this.onEndGetReportPeriodsDelegate, this.onGetReportPeriodsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CARS.CARSService.ICARSService.BeginUpdateReportPeriods(System.Collections.ObjectModel.ObservableCollection<CARS.CARSService.ReportPeriod> reportPeriods, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateReportPeriods(reportPeriods, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool CARS.CARSService.ICARSService.EndUpdateReportPeriods(System.IAsyncResult result) {
            return base.Channel.EndUpdateReportPeriods(result);
        }
        
        private System.IAsyncResult OnBeginUpdateReportPeriods(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<CARS.CARSService.ReportPeriod> reportPeriods = ((System.Collections.ObjectModel.ObservableCollection<CARS.CARSService.ReportPeriod>)(inValues[0]));
            return ((CARS.CARSService.ICARSService)(this)).BeginUpdateReportPeriods(reportPeriods, callback, asyncState);
        }
        
        private object[] OnEndUpdateReportPeriods(System.IAsyncResult result) {
            bool retVal = ((CARS.CARSService.ICARSService)(this)).EndUpdateReportPeriods(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateReportPeriodsCompleted(object state) {
            if ((this.UpdateReportPeriodsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateReportPeriodsCompleted(this, new UpdateReportPeriodsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateReportPeriodsAsync(System.Collections.ObjectModel.ObservableCollection<CARS.CARSService.ReportPeriod> reportPeriods) {
            this.UpdateReportPeriodsAsync(reportPeriods, null);
        }
        
        public void UpdateReportPeriodsAsync(System.Collections.ObjectModel.ObservableCollection<CARS.CARSService.ReportPeriod> reportPeriods, object userState) {
            if ((this.onBeginUpdateReportPeriodsDelegate == null)) {
                this.onBeginUpdateReportPeriodsDelegate = new BeginOperationDelegate(this.OnBeginUpdateReportPeriods);
            }
            if ((this.onEndUpdateReportPeriodsDelegate == null)) {
                this.onEndUpdateReportPeriodsDelegate = new EndOperationDelegate(this.OnEndUpdateReportPeriods);
            }
            if ((this.onUpdateReportPeriodsCompletedDelegate == null)) {
                this.onUpdateReportPeriodsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateReportPeriodsCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateReportPeriodsDelegate, new object[] {
                        reportPeriods}, this.onEndUpdateReportPeriodsDelegate, this.onUpdateReportPeriodsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CARS.CARSService.ICARSService.BeginGetVersion(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetVersion(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string CARS.CARSService.ICARSService.EndGetVersion(System.IAsyncResult result) {
            return base.Channel.EndGetVersion(result);
        }
        
        private System.IAsyncResult OnBeginGetVersion(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((CARS.CARSService.ICARSService)(this)).BeginGetVersion(callback, asyncState);
        }
        
        private object[] OnEndGetVersion(System.IAsyncResult result) {
            string retVal = ((CARS.CARSService.ICARSService)(this)).EndGetVersion(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetVersionCompleted(object state) {
            if ((this.GetVersionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetVersionCompleted(this, new GetVersionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetVersionAsync() {
            this.GetVersionAsync(null);
        }
        
        public void GetVersionAsync(object userState) {
            if ((this.onBeginGetVersionDelegate == null)) {
                this.onBeginGetVersionDelegate = new BeginOperationDelegate(this.OnBeginGetVersion);
            }
            if ((this.onEndGetVersionDelegate == null)) {
                this.onEndGetVersionDelegate = new EndOperationDelegate(this.OnEndGetVersion);
            }
            if ((this.onGetVersionCompletedDelegate == null)) {
                this.onGetVersionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetVersionCompleted);
            }
            base.InvokeAsync(this.onBeginGetVersionDelegate, null, this.onEndGetVersionDelegate, this.onGetVersionCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CARS.CARSService.ICARSService.BeginGetFrozenDate(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetFrozenDate(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.DateTime CARS.CARSService.ICARSService.EndGetFrozenDate(System.IAsyncResult result) {
            return base.Channel.EndGetFrozenDate(result);
        }
        
        private System.IAsyncResult OnBeginGetFrozenDate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((CARS.CARSService.ICARSService)(this)).BeginGetFrozenDate(callback, asyncState);
        }
        
        private object[] OnEndGetFrozenDate(System.IAsyncResult result) {
            System.DateTime retVal = ((CARS.CARSService.ICARSService)(this)).EndGetFrozenDate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetFrozenDateCompleted(object state) {
            if ((this.GetFrozenDateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetFrozenDateCompleted(this, new GetFrozenDateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetFrozenDateAsync() {
            this.GetFrozenDateAsync(null);
        }
        
        public void GetFrozenDateAsync(object userState) {
            if ((this.onBeginGetFrozenDateDelegate == null)) {
                this.onBeginGetFrozenDateDelegate = new BeginOperationDelegate(this.OnBeginGetFrozenDate);
            }
            if ((this.onEndGetFrozenDateDelegate == null)) {
                this.onEndGetFrozenDateDelegate = new EndOperationDelegate(this.OnEndGetFrozenDate);
            }
            if ((this.onGetFrozenDateCompletedDelegate == null)) {
                this.onGetFrozenDateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetFrozenDateCompleted);
            }
            base.InvokeAsync(this.onBeginGetFrozenDateDelegate, null, this.onEndGetFrozenDateDelegate, this.onGetFrozenDateCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CARS.CARSService.ICARSService.BeginGetAnnualLeaveReportForAdminAddress(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAnnualLeaveReportForAdminAddress(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string CARS.CARSService.ICARSService.EndGetAnnualLeaveReportForAdminAddress(System.IAsyncResult result) {
            return base.Channel.EndGetAnnualLeaveReportForAdminAddress(result);
        }
        
        private System.IAsyncResult OnBeginGetAnnualLeaveReportForAdminAddress(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((CARS.CARSService.ICARSService)(this)).BeginGetAnnualLeaveReportForAdminAddress(callback, asyncState);
        }
        
        private object[] OnEndGetAnnualLeaveReportForAdminAddress(System.IAsyncResult result) {
            string retVal = ((CARS.CARSService.ICARSService)(this)).EndGetAnnualLeaveReportForAdminAddress(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAnnualLeaveReportForAdminAddressCompleted(object state) {
            if ((this.GetAnnualLeaveReportForAdminAddressCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAnnualLeaveReportForAdminAddressCompleted(this, new GetAnnualLeaveReportForAdminAddressCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAnnualLeaveReportForAdminAddressAsync() {
            this.GetAnnualLeaveReportForAdminAddressAsync(null);
        }
        
        public void GetAnnualLeaveReportForAdminAddressAsync(object userState) {
            if ((this.onBeginGetAnnualLeaveReportForAdminAddressDelegate == null)) {
                this.onBeginGetAnnualLeaveReportForAdminAddressDelegate = new BeginOperationDelegate(this.OnBeginGetAnnualLeaveReportForAdminAddress);
            }
            if ((this.onEndGetAnnualLeaveReportForAdminAddressDelegate == null)) {
                this.onEndGetAnnualLeaveReportForAdminAddressDelegate = new EndOperationDelegate(this.OnEndGetAnnualLeaveReportForAdminAddress);
            }
            if ((this.onGetAnnualLeaveReportForAdminAddressCompletedDelegate == null)) {
                this.onGetAnnualLeaveReportForAdminAddressCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAnnualLeaveReportForAdminAddressCompleted);
            }
            base.InvokeAsync(this.onBeginGetAnnualLeaveReportForAdminAddressDelegate, null, this.onEndGetAnnualLeaveReportForAdminAddressDelegate, this.onGetAnnualLeaveReportForAdminAddressCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CARS.CARSService.ICARSService.BeginGetSickLeaveReportForAdminAddress(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSickLeaveReportForAdminAddress(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string CARS.CARSService.ICARSService.EndGetSickLeaveReportForAdminAddress(System.IAsyncResult result) {
            return base.Channel.EndGetSickLeaveReportForAdminAddress(result);
        }
        
        private System.IAsyncResult OnBeginGetSickLeaveReportForAdminAddress(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((CARS.CARSService.ICARSService)(this)).BeginGetSickLeaveReportForAdminAddress(callback, asyncState);
        }
        
        private object[] OnEndGetSickLeaveReportForAdminAddress(System.IAsyncResult result) {
            string retVal = ((CARS.CARSService.ICARSService)(this)).EndGetSickLeaveReportForAdminAddress(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSickLeaveReportForAdminAddressCompleted(object state) {
            if ((this.GetSickLeaveReportForAdminAddressCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSickLeaveReportForAdminAddressCompleted(this, new GetSickLeaveReportForAdminAddressCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSickLeaveReportForAdminAddressAsync() {
            this.GetSickLeaveReportForAdminAddressAsync(null);
        }
        
        public void GetSickLeaveReportForAdminAddressAsync(object userState) {
            if ((this.onBeginGetSickLeaveReportForAdminAddressDelegate == null)) {
                this.onBeginGetSickLeaveReportForAdminAddressDelegate = new BeginOperationDelegate(this.OnBeginGetSickLeaveReportForAdminAddress);
            }
            if ((this.onEndGetSickLeaveReportForAdminAddressDelegate == null)) {
                this.onEndGetSickLeaveReportForAdminAddressDelegate = new EndOperationDelegate(this.OnEndGetSickLeaveReportForAdminAddress);
            }
            if ((this.onGetSickLeaveReportForAdminAddressCompletedDelegate == null)) {
                this.onGetSickLeaveReportForAdminAddressCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSickLeaveReportForAdminAddressCompleted);
            }
            base.InvokeAsync(this.onBeginGetSickLeaveReportForAdminAddressDelegate, null, this.onEndGetSickLeaveReportForAdminAddressDelegate, this.onGetSickLeaveReportForAdminAddressCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CARS.CARSService.ICARSService.BeginGetAnnualLeaveReportForSupervisorAddress(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAnnualLeaveReportForSupervisorAddress(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string CARS.CARSService.ICARSService.EndGetAnnualLeaveReportForSupervisorAddress(System.IAsyncResult result) {
            return base.Channel.EndGetAnnualLeaveReportForSupervisorAddress(result);
        }
        
        private System.IAsyncResult OnBeginGetAnnualLeaveReportForSupervisorAddress(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((CARS.CARSService.ICARSService)(this)).BeginGetAnnualLeaveReportForSupervisorAddress(callback, asyncState);
        }
        
        private object[] OnEndGetAnnualLeaveReportForSupervisorAddress(System.IAsyncResult result) {
            string retVal = ((CARS.CARSService.ICARSService)(this)).EndGetAnnualLeaveReportForSupervisorAddress(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAnnualLeaveReportForSupervisorAddressCompleted(object state) {
            if ((this.GetAnnualLeaveReportForSupervisorAddressCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAnnualLeaveReportForSupervisorAddressCompleted(this, new GetAnnualLeaveReportForSupervisorAddressCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAnnualLeaveReportForSupervisorAddressAsync() {
            this.GetAnnualLeaveReportForSupervisorAddressAsync(null);
        }
        
        public void GetAnnualLeaveReportForSupervisorAddressAsync(object userState) {
            if ((this.onBeginGetAnnualLeaveReportForSupervisorAddressDelegate == null)) {
                this.onBeginGetAnnualLeaveReportForSupervisorAddressDelegate = new BeginOperationDelegate(this.OnBeginGetAnnualLeaveReportForSupervisorAddress);
            }
            if ((this.onEndGetAnnualLeaveReportForSupervisorAddressDelegate == null)) {
                this.onEndGetAnnualLeaveReportForSupervisorAddressDelegate = new EndOperationDelegate(this.OnEndGetAnnualLeaveReportForSupervisorAddress);
            }
            if ((this.onGetAnnualLeaveReportForSupervisorAddressCompletedDelegate == null)) {
                this.onGetAnnualLeaveReportForSupervisorAddressCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAnnualLeaveReportForSupervisorAddressCompleted);
            }
            base.InvokeAsync(this.onBeginGetAnnualLeaveReportForSupervisorAddressDelegate, null, this.onEndGetAnnualLeaveReportForSupervisorAddressDelegate, this.onGetAnnualLeaveReportForSupervisorAddressCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CARS.CARSService.ICARSService.BeginGetSickLeaveReportForSupervisorAddress(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSickLeaveReportForSupervisorAddress(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string CARS.CARSService.ICARSService.EndGetSickLeaveReportForSupervisorAddress(System.IAsyncResult result) {
            return base.Channel.EndGetSickLeaveReportForSupervisorAddress(result);
        }
        
        private System.IAsyncResult OnBeginGetSickLeaveReportForSupervisorAddress(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((CARS.CARSService.ICARSService)(this)).BeginGetSickLeaveReportForSupervisorAddress(callback, asyncState);
        }
        
        private object[] OnEndGetSickLeaveReportForSupervisorAddress(System.IAsyncResult result) {
            string retVal = ((CARS.CARSService.ICARSService)(this)).EndGetSickLeaveReportForSupervisorAddress(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSickLeaveReportForSupervisorAddressCompleted(object state) {
            if ((this.GetSickLeaveReportForSupervisorAddressCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSickLeaveReportForSupervisorAddressCompleted(this, new GetSickLeaveReportForSupervisorAddressCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSickLeaveReportForSupervisorAddressAsync() {
            this.GetSickLeaveReportForSupervisorAddressAsync(null);
        }
        
        public void GetSickLeaveReportForSupervisorAddressAsync(object userState) {
            if ((this.onBeginGetSickLeaveReportForSupervisorAddressDelegate == null)) {
                this.onBeginGetSickLeaveReportForSupervisorAddressDelegate = new BeginOperationDelegate(this.OnBeginGetSickLeaveReportForSupervisorAddress);
            }
            if ((this.onEndGetSickLeaveReportForSupervisorAddressDelegate == null)) {
                this.onEndGetSickLeaveReportForSupervisorAddressDelegate = new EndOperationDelegate(this.OnEndGetSickLeaveReportForSupervisorAddress);
            }
            if ((this.onGetSickLeaveReportForSupervisorAddressCompletedDelegate == null)) {
                this.onGetSickLeaveReportForSupervisorAddressCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSickLeaveReportForSupervisorAddressCompleted);
            }
            base.InvokeAsync(this.onBeginGetSickLeaveReportForSupervisorAddressDelegate, null, this.onEndGetSickLeaveReportForSupervisorAddressDelegate, this.onGetSickLeaveReportForSupervisorAddressCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CARS.CARSService.ICARSService.BeginCheckSupervisorValidation(string employeeID, string supervisorID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCheckSupervisorValidation(employeeID, supervisorID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool CARS.CARSService.ICARSService.EndCheckSupervisorValidation(System.IAsyncResult result) {
            return base.Channel.EndCheckSupervisorValidation(result);
        }
        
        private System.IAsyncResult OnBeginCheckSupervisorValidation(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string employeeID = ((string)(inValues[0]));
            string supervisorID = ((string)(inValues[1]));
            return ((CARS.CARSService.ICARSService)(this)).BeginCheckSupervisorValidation(employeeID, supervisorID, callback, asyncState);
        }
        
        private object[] OnEndCheckSupervisorValidation(System.IAsyncResult result) {
            bool retVal = ((CARS.CARSService.ICARSService)(this)).EndCheckSupervisorValidation(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCheckSupervisorValidationCompleted(object state) {
            if ((this.CheckSupervisorValidationCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CheckSupervisorValidationCompleted(this, new CheckSupervisorValidationCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CheckSupervisorValidationAsync(string employeeID, string supervisorID) {
            this.CheckSupervisorValidationAsync(employeeID, supervisorID, null);
        }
        
        public void CheckSupervisorValidationAsync(string employeeID, string supervisorID, object userState) {
            if ((this.onBeginCheckSupervisorValidationDelegate == null)) {
                this.onBeginCheckSupervisorValidationDelegate = new BeginOperationDelegate(this.OnBeginCheckSupervisorValidation);
            }
            if ((this.onEndCheckSupervisorValidationDelegate == null)) {
                this.onEndCheckSupervisorValidationDelegate = new EndOperationDelegate(this.OnEndCheckSupervisorValidation);
            }
            if ((this.onCheckSupervisorValidationCompletedDelegate == null)) {
                this.onCheckSupervisorValidationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCheckSupervisorValidationCompleted);
            }
            base.InvokeAsync(this.onBeginCheckSupervisorValidationDelegate, new object[] {
                        employeeID,
                        supervisorID}, this.onEndCheckSupervisorValidationDelegate, this.onCheckSupervisorValidationCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CARS.CARSService.ICARSService.BeginGetUserManualAddress(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetUserManualAddress(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string CARS.CARSService.ICARSService.EndGetUserManualAddress(System.IAsyncResult result) {
            return base.Channel.EndGetUserManualAddress(result);
        }
        
        private System.IAsyncResult OnBeginGetUserManualAddress(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((CARS.CARSService.ICARSService)(this)).BeginGetUserManualAddress(callback, asyncState);
        }
        
        private object[] OnEndGetUserManualAddress(System.IAsyncResult result) {
            string retVal = ((CARS.CARSService.ICARSService)(this)).EndGetUserManualAddress(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetUserManualAddressCompleted(object state) {
            if ((this.GetUserManualAddressCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetUserManualAddressCompleted(this, new GetUserManualAddressCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetUserManualAddressAsync() {
            this.GetUserManualAddressAsync(null);
        }
        
        public void GetUserManualAddressAsync(object userState) {
            if ((this.onBeginGetUserManualAddressDelegate == null)) {
                this.onBeginGetUserManualAddressDelegate = new BeginOperationDelegate(this.OnBeginGetUserManualAddress);
            }
            if ((this.onEndGetUserManualAddressDelegate == null)) {
                this.onEndGetUserManualAddressDelegate = new EndOperationDelegate(this.OnEndGetUserManualAddress);
            }
            if ((this.onGetUserManualAddressCompletedDelegate == null)) {
                this.onGetUserManualAddressCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetUserManualAddressCompleted);
            }
            base.InvokeAsync(this.onBeginGetUserManualAddressDelegate, null, this.onEndGetUserManualAddressDelegate, this.onGetUserManualAddressCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CARS.CARSService.ICARSService.BeginGetReportBugAddress(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetReportBugAddress(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string CARS.CARSService.ICARSService.EndGetReportBugAddress(System.IAsyncResult result) {
            return base.Channel.EndGetReportBugAddress(result);
        }
        
        private System.IAsyncResult OnBeginGetReportBugAddress(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((CARS.CARSService.ICARSService)(this)).BeginGetReportBugAddress(callback, asyncState);
        }
        
        private object[] OnEndGetReportBugAddress(System.IAsyncResult result) {
            string retVal = ((CARS.CARSService.ICARSService)(this)).EndGetReportBugAddress(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetReportBugAddressCompleted(object state) {
            if ((this.GetReportBugAddressCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetReportBugAddressCompleted(this, new GetReportBugAddressCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetReportBugAddressAsync() {
            this.GetReportBugAddressAsync(null);
        }
        
        public void GetReportBugAddressAsync(object userState) {
            if ((this.onBeginGetReportBugAddressDelegate == null)) {
                this.onBeginGetReportBugAddressDelegate = new BeginOperationDelegate(this.OnBeginGetReportBugAddress);
            }
            if ((this.onEndGetReportBugAddressDelegate == null)) {
                this.onEndGetReportBugAddressDelegate = new EndOperationDelegate(this.OnEndGetReportBugAddress);
            }
            if ((this.onGetReportBugAddressCompletedDelegate == null)) {
                this.onGetReportBugAddressCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetReportBugAddressCompleted);
            }
            base.InvokeAsync(this.onBeginGetReportBugAddressDelegate, null, this.onEndGetReportBugAddressDelegate, this.onGetReportBugAddressCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CARS.CARSService.ICARSService.BeginRecallLeave(string pkleaveInfoID, string employeeID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRecallLeave(pkleaveInfoID, employeeID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool CARS.CARSService.ICARSService.EndRecallLeave(System.IAsyncResult result) {
            return base.Channel.EndRecallLeave(result);
        }
        
        private System.IAsyncResult OnBeginRecallLeave(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string pkleaveInfoID = ((string)(inValues[0]));
            string employeeID = ((string)(inValues[1]));
            return ((CARS.CARSService.ICARSService)(this)).BeginRecallLeave(pkleaveInfoID, employeeID, callback, asyncState);
        }
        
        private object[] OnEndRecallLeave(System.IAsyncResult result) {
            bool retVal = ((CARS.CARSService.ICARSService)(this)).EndRecallLeave(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRecallLeaveCompleted(object state) {
            if ((this.RecallLeaveCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RecallLeaveCompleted(this, new RecallLeaveCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RecallLeaveAsync(string pkleaveInfoID, string employeeID) {
            this.RecallLeaveAsync(pkleaveInfoID, employeeID, null);
        }
        
        public void RecallLeaveAsync(string pkleaveInfoID, string employeeID, object userState) {
            if ((this.onBeginRecallLeaveDelegate == null)) {
                this.onBeginRecallLeaveDelegate = new BeginOperationDelegate(this.OnBeginRecallLeave);
            }
            if ((this.onEndRecallLeaveDelegate == null)) {
                this.onEndRecallLeaveDelegate = new EndOperationDelegate(this.OnEndRecallLeave);
            }
            if ((this.onRecallLeaveCompletedDelegate == null)) {
                this.onRecallLeaveCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRecallLeaveCompleted);
            }
            base.InvokeAsync(this.onBeginRecallLeaveDelegate, new object[] {
                        pkleaveInfoID,
                        employeeID}, this.onEndRecallLeaveDelegate, this.onRecallLeaveCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override CARS.CARSService.ICARSService CreateChannel() {
            return new CARSServiceClientChannel(this);
        }
        
        private class CARSServiceClientChannel : ChannelBase<CARS.CARSService.ICARSService>, CARS.CARSService.ICARSService {
            
            public CARSServiceClientChannel(System.ServiceModel.ClientBase<CARS.CARSService.ICARSService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginLogin(string email, string password, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = email;
                _args[1] = password;
                System.IAsyncResult _result = base.BeginInvoke("Login", _args, callback, asyncState);
                return _result;
            }
            
            public CARS.CARSService.Employee EndLogin(System.IAsyncResult result) {
                object[] _args = new object[0];
                CARS.CARSService.Employee _result = ((CARS.CARSService.Employee)(base.EndInvoke("Login", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAddEmployee(string email, string firstName, string middleName, string lastName, string legalName, CARS.CARSService.Sex gender, float serviceYear, System.DateTime dateOfHire, string supervisorEmail, string costCenterCode, int employeeNum, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[11];
                _args[0] = email;
                _args[1] = firstName;
                _args[2] = middleName;
                _args[3] = lastName;
                _args[4] = legalName;
                _args[5] = gender;
                _args[6] = serviceYear;
                _args[7] = dateOfHire;
                _args[8] = supervisorEmail;
                _args[9] = costCenterCode;
                _args[10] = employeeNum;
                System.IAsyncResult _result = base.BeginInvoke("AddEmployee", _args, callback, asyncState);
                return _result;
            }
            
            public CARS.CARSService.Employee EndAddEmployee(System.IAsyncResult result) {
                object[] _args = new object[0];
                CARS.CARSService.Employee _result = ((CARS.CARSService.Employee)(base.EndInvoke("AddEmployee", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdateEmployee(
                        string employeeID, 
                        string email, 
                        string firstName, 
                        string middleName, 
                        string lastName, 
                        string legalName, 
                        CARS.CARSService.Sex gender, 
                        float serviceYear, 
                        System.DateTime dateOfHire, 
                        string supervisorEmail, 
                        string password, 
                        string phone, 
                        string mobile, 
                        bool isAdmin, 
                        bool isActive, 
                        bool isManager, 
                        string costCenterCode, 
                        int employeeNum, 
                        System.AsyncCallback callback, 
                        object asyncState) {
                object[] _args = new object[18];
                _args[0] = employeeID;
                _args[1] = email;
                _args[2] = firstName;
                _args[3] = middleName;
                _args[4] = lastName;
                _args[5] = legalName;
                _args[6] = gender;
                _args[7] = serviceYear;
                _args[8] = dateOfHire;
                _args[9] = supervisorEmail;
                _args[10] = password;
                _args[11] = phone;
                _args[12] = mobile;
                _args[13] = isAdmin;
                _args[14] = isActive;
                _args[15] = isManager;
                _args[16] = costCenterCode;
                _args[17] = employeeNum;
                System.IAsyncResult _result = base.BeginInvoke("UpdateEmployee", _args, callback, asyncState);
                return _result;
            }
            
            public CARS.CARSService.Employee EndUpdateEmployee(System.IAsyncResult result) {
                object[] _args = new object[0];
                CARS.CARSService.Employee _result = ((CARS.CARSService.Employee)(base.EndInvoke("UpdateEmployee", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetManagers(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetManagers", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<CARS.CARSService.Employee> EndGetManagers(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<CARS.CARSService.Employee> _result = ((System.Collections.ObjectModel.ObservableCollection<CARS.CARSService.Employee>)(base.EndInvoke("GetManagers", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginApplyLeave(string employeeID, string reason, string leaveType, string description, System.Collections.ObjectModel.ObservableCollection<CARS.CARSService.TimeDurationInfo> durationList, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = employeeID;
                _args[1] = reason;
                _args[2] = leaveType;
                _args[3] = description;
                _args[4] = durationList;
                System.IAsyncResult _result = base.BeginInvoke("ApplyLeave", _args, callback, asyncState);
                return _result;
            }
            
            public CARS.CARSService.LeaveInfo EndApplyLeave(System.IAsyncResult result) {
                object[] _args = new object[0];
                CARS.CARSService.LeaveInfo _result = ((CARS.CARSService.LeaveInfo)(base.EndInvoke("ApplyLeave", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetMyLeaves(string employeeID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = employeeID;
                System.IAsyncResult _result = base.BeginInvoke("GetMyLeaves", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<CARS.CARSService.LeaveInfo> EndGetMyLeaves(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<CARS.CARSService.LeaveInfo> _result = ((System.Collections.ObjectModel.ObservableCollection<CARS.CARSService.LeaveInfo>)(base.EndInvoke("GetMyLeaves", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetMyTeamLeaves(string employeeID, bool onlyApplyingRecords, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = employeeID;
                _args[1] = onlyApplyingRecords;
                System.IAsyncResult _result = base.BeginInvoke("GetMyTeamLeaves", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<CARS.CARSService.LeaveInfo> EndGetMyTeamLeaves(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<CARS.CARSService.LeaveInfo> _result = ((System.Collections.ObjectModel.ObservableCollection<CARS.CARSService.LeaveInfo>)(base.EndInvoke("GetMyTeamLeaves", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginApproveLeave(string managerID, string leaveID, CARS.CARSService.LeaveStatus status, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = managerID;
                _args[1] = leaveID;
                _args[2] = status;
                System.IAsyncResult _result = base.BeginInvoke("ApproveLeave", _args, callback, asyncState);
                return _result;
            }
            
            public CARS.CARSService.LeaveInfo EndApproveLeave(System.IAsyncResult result) {
                object[] _args = new object[0];
                CARS.CARSService.LeaveInfo _result = ((CARS.CARSService.LeaveInfo)(base.EndInvoke("ApproveLeave", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRejectLeave(string managerID, string leaveID, CARS.CARSService.LeaveStatus status, string reason, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = managerID;
                _args[1] = leaveID;
                _args[2] = status;
                _args[3] = reason;
                System.IAsyncResult _result = base.BeginInvoke("RejectLeave", _args, callback, asyncState);
                return _result;
            }
            
            public CARS.CARSService.LeaveInfo EndRejectLeave(System.IAsyncResult result) {
                object[] _args = new object[0];
                CARS.CARSService.LeaveInfo _result = ((CARS.CARSService.LeaveInfo)(base.EndInvoke("RejectLeave", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAnnualLeaveEarnedHours(string employeeID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = employeeID;
                System.IAsyncResult _result = base.BeginInvoke("GetAnnualLeaveEarnedHours", _args, callback, asyncState);
                return _result;
            }
            
            public int EndGetAnnualLeaveEarnedHours(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("GetAnnualLeaveEarnedHours", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAnnualLeaveUsedHours(string employeeID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = employeeID;
                System.IAsyncResult _result = base.BeginInvoke("GetAnnualLeaveUsedHours", _args, callback, asyncState);
                return _result;
            }
            
            public int EndGetAnnualLeaveUsedHours(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("GetAnnualLeaveUsedHours", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetSickLeaveUsedHours(string employeeID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = employeeID;
                System.IAsyncResult _result = base.BeginInvoke("GetSickLeaveUsedHours", _args, callback, asyncState);
                return _result;
            }
            
            public int EndGetSickLeaveUsedHours(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("GetSickLeaveUsedHours", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginForgetPassword(string email, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = email;
                System.IAsyncResult _result = base.BeginInvoke("ForgetPassword", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndForgetPassword(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("ForgetPassword", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetLeaveTypes(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetLeaveTypes", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<CARS.CARSService.LeaveType> EndGetLeaveTypes(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<CARS.CARSService.LeaveType> _result = ((System.Collections.ObjectModel.ObservableCollection<CARS.CARSService.LeaveType>)(base.EndInvoke("GetLeaveTypes", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginFindLeaves(string supervisors, string applicants, string leaveTypeId, string leaveStatus, System.DateTime start, System.DateTime end, string supervisorIDs, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[7];
                _args[0] = supervisors;
                _args[1] = applicants;
                _args[2] = leaveTypeId;
                _args[3] = leaveStatus;
                _args[4] = start;
                _args[5] = end;
                _args[6] = supervisorIDs;
                System.IAsyncResult _result = base.BeginInvoke("FindLeaves", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<CARS.CARSService.LeaveInfo> EndFindLeaves(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<CARS.CARSService.LeaveInfo> _result = ((System.Collections.ObjectModel.ObservableCollection<CARS.CARSService.LeaveInfo>)(base.EndInvoke("FindLeaves", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAllEmployees(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetAllEmployees", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<CARS.CARSService.Employee> EndGetAllEmployees(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<CARS.CARSService.Employee> _result = ((System.Collections.ObjectModel.ObservableCollection<CARS.CARSService.Employee>)(base.EndInvoke("GetAllEmployees", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetReportPeriods(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetReportPeriods", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<CARS.CARSService.ReportPeriod> EndGetReportPeriods(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<CARS.CARSService.ReportPeriod> _result = ((System.Collections.ObjectModel.ObservableCollection<CARS.CARSService.ReportPeriod>)(base.EndInvoke("GetReportPeriods", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdateReportPeriods(System.Collections.ObjectModel.ObservableCollection<CARS.CARSService.ReportPeriod> reportPeriods, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = reportPeriods;
                System.IAsyncResult _result = base.BeginInvoke("UpdateReportPeriods", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndUpdateReportPeriods(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("UpdateReportPeriods", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetVersion(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetVersion", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetVersion(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetVersion", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetFrozenDate(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetFrozenDate", _args, callback, asyncState);
                return _result;
            }
            
            public System.DateTime EndGetFrozenDate(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.DateTime _result = ((System.DateTime)(base.EndInvoke("GetFrozenDate", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAnnualLeaveReportForAdminAddress(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetAnnualLeaveReportForAdminAddress", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetAnnualLeaveReportForAdminAddress(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetAnnualLeaveReportForAdminAddress", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetSickLeaveReportForAdminAddress(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetSickLeaveReportForAdminAddress", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetSickLeaveReportForAdminAddress(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetSickLeaveReportForAdminAddress", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAnnualLeaveReportForSupervisorAddress(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetAnnualLeaveReportForSupervisorAddress", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetAnnualLeaveReportForSupervisorAddress(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetAnnualLeaveReportForSupervisorAddress", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetSickLeaveReportForSupervisorAddress(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetSickLeaveReportForSupervisorAddress", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetSickLeaveReportForSupervisorAddress(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetSickLeaveReportForSupervisorAddress", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCheckSupervisorValidation(string employeeID, string supervisorID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = employeeID;
                _args[1] = supervisorID;
                System.IAsyncResult _result = base.BeginInvoke("CheckSupervisorValidation", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndCheckSupervisorValidation(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("CheckSupervisorValidation", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetUserManualAddress(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetUserManualAddress", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetUserManualAddress(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetUserManualAddress", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetReportBugAddress(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetReportBugAddress", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetReportBugAddress(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetReportBugAddress", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRecallLeave(string pkleaveInfoID, string employeeID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = pkleaveInfoID;
                _args[1] = employeeID;
                System.IAsyncResult _result = base.BeginInvoke("RecallLeave", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndRecallLeave(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("RecallLeave", _args, result)));
                return _result;
            }
        }
    }
}
